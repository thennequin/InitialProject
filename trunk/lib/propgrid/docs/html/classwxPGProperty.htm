<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>wxPropertyGrid: wxPGProperty Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.9 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
    <li>
      <form action="search.php" method="get">
        <table cellspacing="0" cellpadding="0" border="0">
          <tr>
            <td><label>&nbsp;<u>S</u>earch&nbsp;for&nbsp;</label></td>
            <td><input type="text" name="query" value="" size="20" accesskey="s"/></td>
          </tr>
        </table>
      </form>
    </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>wxPGProperty Class Reference</h1><!-- doxytag: class="wxPGProperty" --><a class="el" href="classwxPGProperty.htm" title="wxPGProperty is base class for all wxPropertyGrid properties.">wxPGProperty</a> is base class for all <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> properties.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;propgrid.h&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for wxPGProperty:</div>
<div class="dynsection">

<p><center><img src="classwxPGProperty.png" usemap="#wxPGProperty_map" border="0" alt=""></center>
<map name="wxPGProperty_map">
<area href="classwxArrayStringProperty.htm" alt="wxArrayStringProperty" shape="rect" coords="153,56,296,80">
<area href="classwxBaseEnumProperty.htm" alt="wxBaseEnumProperty" shape="rect" coords="153,112,296,136">
<area href="classwxBoolProperty.htm" alt="wxBoolProperty" shape="rect" coords="153,168,296,192">
<area href="classwxCustomProperty.htm" alt="wxCustomProperty" shape="rect" coords="153,224,296,248">
<area href="classwxDateProperty.htm" alt="wxDateProperty" shape="rect" coords="153,280,296,304">
<area href="classwxFileProperty.htm" alt="wxFileProperty" shape="rect" coords="153,336,296,360">
<area href="classwxFlagsProperty.htm" alt="wxFlagsProperty" shape="rect" coords="153,392,296,416">
<area href="classwxFloatProperty.htm" alt="wxFloatProperty" shape="rect" coords="153,448,296,472">
<area href="classwxFontProperty.htm" alt="wxFontProperty" shape="rect" coords="153,504,296,528">
<area href="classwxIntProperty.htm" alt="wxIntProperty" shape="rect" coords="153,560,296,584">
<area href="classwxLongStringProperty.htm" alt="wxLongStringProperty" shape="rect" coords="153,616,296,640">
<area href="classwxMultiChoiceProperty.htm" alt="wxMultiChoiceProperty" shape="rect" coords="153,672,296,696">
<area href="classwxPGRootProperty.htm" alt="wxPGRootProperty" shape="rect" coords="153,728,296,752">
<area href="classwxPropertyCategory.htm" alt="wxPropertyCategory" shape="rect" coords="153,784,296,808">
<area href="classwxStringProperty.htm" alt="wxStringProperty" shape="rect" coords="153,840,296,864">
<area href="classwxUIntProperty.htm" alt="wxUIntProperty" shape="rect" coords="153,896,296,920">
</map>
</div>

<p>
<a href="classwxPGProperty-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Types</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d96bea693e87979d271a15dbe5f085fd"></a><!-- doxytag: member="wxPGProperty::ClientDataType" ref="d96bea693e87979d271a15dbe5f085fd" args="" -->
typedef void *&nbsp;</td><td class="memItemRight" valign="bottom"><b>ClientDataType</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="68b0ae8aab37c387f5fc4b7e9c53968e"></a><!-- doxytag: member="wxPGProperty::FlagType" ref="68b0ae8aab37c387f5fc4b7e9c53968e" args="" -->
typedef wxUint32&nbsp;</td><td class="memItemRight" valign="bottom"><b>FlagType</b></td></tr>

<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGCell.htm">wxPGCell</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#e6d67a740b88f22b21e177b27d633d5a">AcquireCell</a> (unsigned int column)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns <a class="el" href="classwxPGCell.htm" title="Base class for simple wxPropertyGrid cell information.">wxPGCell</a> of given column, NULL if none.  <a href="#e6d67a740b88f22b21e177b27d633d5a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="442df43d855f7c699ac0b2e35c07dccd"></a><!-- doxytag: member="wxPGProperty::ActualIntToValue" ref="442df43d855f7c699ac0b2e35c07dccd" args="(wxVariant &amp;variant, int number, int argFlags=0) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>ActualIntToValue</b> (wxVariant &amp;variant, int number, int argFlags=0) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a08011e0847c052110cc8d7ee5ec7bdb"></a><!-- doxytag: member="wxPGProperty::ActualStringToValue" ref="a08011e0847c052110cc8d7ee5ec7bdb" args="(wxVariant &amp;variant, const wxString &amp;text, int argFlags=0) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>ActualStringToValue</b> (wxVariant &amp;variant, const wxString &amp;text, int argFlags=0) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b4fe37d390a925081a5d7fda5be16f76"></a><!-- doxytag: member="wxPGProperty::ActualValidateValue" ref="b4fe37d390a925081a5d7fda5be16f76" args="(wxVariant &amp;value, wxPGValidationInfo &amp;validationInfo) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>ActualValidateValue</b> (wxVariant &amp;value, <a class="el" href="structwxPGValidationInfo.htm">wxPGValidationInfo</a> &amp;validationInfo) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0202ce34acdf8114a55b1180ecffeeda"></a><!-- doxytag: member="wxPGProperty::AdaptListToValue" ref="0202ce34acdf8114a55b1180ecffeeda" args="(wxVariant &amp;list, wxVariant *value) const " -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#0202ce34acdf8114a55b1180ecffeeda">AdaptListToValue</a> (wxVariant &amp;list, wxVariant *value) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Adapts list variant into proper value using consequtive ChildChanged-calls. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#bec97e799f836560d4f65c7c5fc97f6f">AddPrivateChild</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *prop)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Call this to add sub-properties which will become private, fixed children.  <a href="#bec97e799f836560d4f65c7c5fc97f6f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#0743820583e7066eb726ecbdfc2b2742">AppendChild</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *prop)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Appends a new child property.  <a href="#0743820583e7066eb726ecbdfc2b2742"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#f823df743b115386be4d3e7f1412afb1">AppendChoice</a> (const wxString &amp;label, int value=INT_MAX)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Adds entry to property's <a class="el" href="classwxPGChoices.htm" title="Helper class for managing choices for properties.">wxPGChoices</a> and editor control (if it is active).  <a href="#f823df743b115386be4d3e7f1412afb1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#4f8871590e381ee0d63efc72ed76bba9">AreAllChildrenSpecified</a> (wxVariant *pendingList=NULL) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Determines, recursively, if all children are not unspecified.  <a href="#4f8871590e381ee0d63efc72ed76bba9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1a4ff5d3a02a006dc27e33af02d093a2"></a><!-- doxytag: member="wxPGProperty::AreChildrenComponents" ref="1a4ff5d3a02a006dc27e33af02d093a2" args="() const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#1a4ff5d3a02a006dc27e33af02d093a2">AreChildrenComponents</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if children of this property are component values (for instance, points size, face name, and is_underlined are component values of a font). <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#61e04603ffafaa3a1216efd90f0c444d">CanHaveExtraChildren</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if extra children can be added for this property (i.e.  <a href="#61e04603ffafaa3a1216efd90f0c444d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fe472802368fba0630134d535af1fafc"></a><!-- doxytag: member="wxPGProperty::ChangeFlag" ref="fe472802368fba0630134d535af1fafc" args="(FlagType flag, bool set)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#fe472802368fba0630134d535af1fafc">ChangeFlag</a> (FlagType flag, bool set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets or clears given property flag(s). <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#ce7a9dc69fdf8185cff04c1604cb4fbd">ChildChanged</a> (wxVariant &amp;thisValue, int childIndex, wxVariant &amp;childValue) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Called after value of a child property has been altered.  <a href="#ce7a9dc69fdf8185cff04c1604cb4fbd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2268814902bae1eb9e593c5e127001cb"></a><!-- doxytag: member="wxPGProperty::ClearFlag" ref="2268814902bae1eb9e593c5e127001cb" args="(FlagType flag)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>ClearFlag</b> (FlagType flag)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a8d29e4896c228f93d14fe2420c99f36"></a><!-- doxytag: member="wxPGProperty::DeleteChildren" ref="a8d29e4896c228f93d14fe2420c99f36" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a8d29e4896c228f93d14fe2420c99f36">DeleteChildren</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Deletes children of the property. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#137f1b7ea16f1f18fcc3e50ec107da1f">DeleteChoice</a> (int index)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Removes entry from property's <a class="el" href="classwxPGChoices.htm" title="Helper class for managing choices for properties.">wxPGChoices</a> and editor control (if it is active).  <a href="#137f1b7ea16f1f18fcc3e50ec107da1f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#4417dd87a03fd41d6e4b831c5b2a4548">DoGetAttribute</a> (const wxString &amp;name) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns value of an attribute.  <a href="#4417dd87a03fd41d6e4b831c5b2a4548"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2a890026b842c51658e8c358e137722d"></a><!-- doxytag: member="wxPGProperty::DoGetEditorClass" ref="2a890026b842c51658e8c358e137722d" args="() const " -->
virtual const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#2a890026b842c51658e8c358e137722d">DoGetEditorClass</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns pointer to an instance of editor class. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual wxValidator *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#f1b9f11eab24b1c1331f3f4a663ff98e">DoGetValidator</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns pointer to the wxValidator that should be used with the editor of this property (NULL for no validator).  <a href="#f1b9f11eab24b1c1331f3f4a663ff98e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d34da516faa44c994598ce0a6dda4063"></a><!-- doxytag: member="wxPGProperty::DoGetValue" ref="d34da516faa44c994598ce0a6dda4063" args="() const " -->
virtual wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#d34da516faa44c994598ce0a6dda4063">DoGetValue</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Override this to return something else than m_value as the value. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#7d355ae4bd55f00bc149e5416c39908c">DoSetAttribute</a> (const wxString &amp;name, wxVariant &amp;value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Special handling for attributes of this property.  <a href="#7d355ae4bd55f00bc149e5416c39908c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="bcd8337b04de4934c15b81e4470c5919"></a><!-- doxytag: member="wxPGProperty::Empty" ref="bcd8337b04de4934c15b81e4470c5919" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#bcd8337b04de4934c15b81e4470c5919">Empty</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Deletes children of the property. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#2993285be09f66ae59cdc2fbffe50296">EnableCommonValue</a> (bool enable=true)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Call to enable or disable usage of common value (integer value that can be selected for properties instead of their normal values) for this property.  <a href="#2993285be09f66ae59cdc2fbffe50296"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fa15d2815c2c60e7e3d0f6c2c03af23f"></a><!-- doxytag: member="wxPGProperty::FixIndexesOfChildren" ref="fa15d2815c2c60e7e3d0f6c2c03af23f" args="(unsigned int starthere=0)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>FixIndexesOfChildren</b> (unsigned int starthere=0)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#4ab7197c790d560a7515b032d34626bd">GenerateComposedValue</a> (wxString &amp;text, int argFlags=0) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Composes text from values of child properties.  <a href="#4ab7197c790d560a7515b032d34626bd"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="779abfbac2a20616a3d6a99f4be5bf06"></a><!-- doxytag: member="wxPGProperty::GetArrIndex" ref="779abfbac2a20616a3d6a99f4be5bf06" args="() const " -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetArrIndex</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#ca7fc7738d8ed57e13e2cee6adc6d7d1">GetAttribute</a> (const wxString &amp;name, const wxString &amp;defVal) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns named attribute, as string, if found.  <a href="#ca7fc7738d8ed57e13e2cee6adc6d7d1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ef37546c4f5bf61e20f67a28df9e7093"></a><!-- doxytag: member="wxPGProperty::GetAttribute" ref="ef37546c4f5bf61e20f67a28df9e7093" args="(const wxString &amp;name) const " -->
wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetAttribute</b> (const wxString &amp;name) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">double&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#fb2c6fd9dc99d6a56d45eda1cdc1db79">GetAttributeAsDouble</a> (const wxString &amp;name, double defVal) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns named attribute, as double, if found.  <a href="#fb2c6fd9dc99d6a56d45eda1cdc1db79"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">long&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#5084cee03676645c40dc8c5dcb9ef802">GetAttributeAsLong</a> (const wxString &amp;name, long defVal) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns named attribute, as long, if found.  <a href="#5084cee03676645c40dc8c5dcb9ef802"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="93cecb792c1b3cd05ff9f2728f33c43d"></a><!-- doxytag: member="wxPGProperty::GetAttributes" ref="93cecb792c1b3cd05ff9f2728f33c43d" args="() const " -->
const <a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#93cecb792c1b3cd05ff9f2728f33c43d">GetAttributes</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns comma-delimited string of property attributes. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c5e17dd4ace122b9ba8e007538ba7a02"></a><!-- doxytag: member="wxPGProperty::GetAttributesAsList" ref="c5e17dd4ace122b9ba8e007538ba7a02" args="() const " -->
wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#c5e17dd4ace122b9ba8e007538ba7a02">GetAttributesAsList</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns m_attributes as list wxVariant. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">const wxString &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#dc211e2a17cfaab3a1c7d4b6fd8788b6">GetBaseName</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns property's base name (ie.  <a href="#dc211e2a17cfaab3a1c7d4b6fd8788b6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGCell.htm">wxPGCell</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#182d29e0a63c8f1330314fe105488c20">GetCell</a> (unsigned int column) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns <a class="el" href="classwxPGCell.htm" title="Base class for simple wxPropertyGrid cell information.">wxPGCell</a> of given column, NULL if none.  <a href="#182d29e0a63c8f1330314fe105488c20"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classwxPGCellRenderer.htm">wxPGCellRenderer</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#200356776151608f0ca63e8cc68fdc8b">GetCellRenderer</a> (int column) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns used <a class="el" href="classwxPGCellRenderer.htm" title="Base class for wxPropertyGrid cell renderers.">wxPGCellRenderer</a> instance for given property column (label=0, value=1).  <a href="#200356776151608f0ca63e8cc68fdc8b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="aa1e0364c2a3d0bd34d989634a828fcc"></a><!-- doxytag: member="wxPGProperty::GetChildCount" ref="aa1e0364c2a3d0bd34d989634a828fcc" args="() const " -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#aa1e0364c2a3d0bd34d989634a828fcc">GetChildCount</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns number of child properties. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#6aedf98d88f968610f6adef45d391e80">GetChildrenHeight</a> (int lh, int iMax=-1) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns height of children, recursively, and by taking expanded/collapsed status into account.  <a href="#6aedf98d88f968610f6adef45d391e80"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="394f0ccbb52f032f87c45c27b371acae"></a><!-- doxytag: member="wxPGProperty::GetChoiceCount" ref="394f0ccbb52f032f87c45c27b371acae" args="() const " -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetChoiceCount</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#805b98f7d147782079bb9a48915a949f">GetChoiceInfo</a> (wxPGChoiceInfo *choiceinfo)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current value's index to the choice control.  <a href="#805b98f7d147782079bb9a48915a949f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5659f9cc520b7093b64a10d5ceda04d3"></a><!-- doxytag: member="wxPGProperty::GetChoices" ref="5659f9cc520b7093b64a10d5ceda04d3" args="() const " -->
const <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetChoices</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="22f51ce78edf7857faea5851b6aa57a4"></a><!-- doxytag: member="wxPGProperty::GetChoices" ref="22f51ce78edf7857faea5851b6aa57a4" args="()" -->
<a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetChoices</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5c7a02452a78bd1e2ca43f02388de53b"></a><!-- doxytag: member="wxPGProperty::GetChoiceString" ref="5c7a02452a78bd1e2ca43f02388de53b" args="(unsigned int index)" -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetChoiceString</b> (unsigned int index)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="16190bac100b342515fce7db6a113310"></a><!-- doxytag: member="wxPGProperty::GetClassName" ref="16190bac100b342515fce7db6a113310" args="() const " -->
const wxChar *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetClassName</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c3cbc5740e796b16ec9b0106592625d1"></a><!-- doxytag: member="wxPGProperty::GetClientData" ref="c3cbc5740e796b16ec9b0106592625d1" args="() const " -->
ClientDataType&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetClientData</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#7e360285dcfa6fc18c6bc8a88e261baf">GetColumnEditor</a> (int column) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns editor used for given column.  <a href="#7e360285dcfa6fc18c6bc8a88e261baf"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#c3cb5123b9964d67d825f224b16d0473">GetCommonValue</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns common value selected for this property.  <a href="#c3cb5123b9964d67d825f224b16d0473"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9ac324accf182059358dc4a112bfa6fd"></a><!-- doxytag: member="wxPGProperty::GetCount" ref="9ac324accf182059358dc4a112bfa6fd" args="() const " -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#9ac324accf182059358dc4a112bfa6fd">GetCount</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns number of child properties. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="05a97109980aca951d9e7db319156538"></a><!-- doxytag: member="wxPGProperty::GetCurrentChoice" ref="05a97109980aca951d9e7db319156538" args="() const " -->
const <a class="el" href="classwxPGChoiceEntry.htm">wxPGChoiceEntry</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetCurrentChoice</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ab8de8a18aa6817ac262d37a1c18e591"></a><!-- doxytag: member="wxPGProperty::GetDefaultValue" ref="ab8de8a18aa6817ac262d37a1c18e591" args="() const " -->
wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetDefaultValue</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ae75d0ba0c6ec4a79e14ca50e08f451e"></a><!-- doxytag: member="wxPGProperty::GetDepth" ref="ae75d0ba0c6ec4a79e14ca50e08f451e" args="() const " -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetDepth</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="bf1f1c5763adadf3eeaad3e41e95f721"></a><!-- doxytag: member="wxPGProperty::GetDisplayedCommonValueCount" ref="bf1f1c5763adadf3eeaad3e41e95f721" args="() const " -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#bf1f1c5763adadf3eeaad3e41e95f721">GetDisplayedCommonValueCount</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return number of displayed common values for this property. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fc4727eecd9a28a4f7a5361dbc1e5e76"></a><!-- doxytag: member="wxPGProperty::GetDisplayedString" ref="fc4727eecd9a28a4f7a5361dbc1e5e76" args="() const " -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetDisplayedString</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2f15b192dc294f8a66f2584d8bf0974f"></a><!-- doxytag: member="wxPGProperty::GetEditorClass" ref="2f15b192dc294f8a66f2584d8bf0974f" args="() const " -->
const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetEditorClass</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual <a class="el" href="classwxPGEditorDialogAdapter.htm">wxPGEditorDialogAdapter</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#874654d10c66572f2a4c4c41c843f557">GetEditorDialog</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns instance of a new <a class="el" href="classwxPGEditorDialogAdapter.htm" title="Derive a class from this to adapt an existing editor dialog or function to be used...">wxPGEditorDialogAdapter</a> instance, which is used when user presses the (optional) button next to the editor control;.  <a href="#874654d10c66572f2a4c4c41c843f557"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="20532654013f84d21774f939c4283546"></a><!-- doxytag: member="wxPGProperty::GetFlags" ref="20532654013f84d21774f939c4283546" args="() const " -->
FlagType&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#3ec32fe4fce50790ba93c99b9302dacf">GetFlagsAsString</a> (FlagType flagsMask) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets flags as a'|' delimited string.  <a href="#3ec32fe4fce50790ba93c99b9302dacf"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#921b49bc576e83b6cb900ade60f3787a">GetGrid</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns property grid where property lies.  <a href="#921b49bc576e83b6cb900ade60f3787a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#b116666b230d5d98e8fcb7619eea162c">GetGridIfDisplayed</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns owner <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a>, but only if one is currently on a page displaying this property.  <a href="#b116666b230d5d98e8fcb7619eea162c"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="83843454085c699c2d886671c3460b5f"></a><!-- doxytag: member="wxPGProperty::GetHelpString" ref="83843454085c699c2d886671c3460b5f" args="() const " -->
const wxString &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetHelpString</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGId</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#af3cbf9dbc89396c4a00c50da365400f">GetId</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns property id.  <a href="#af3cbf9dbc89396c4a00c50da365400f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a2d094290ef9ec1c439275863e4ac2f1"></a><!-- doxytag: member="wxPGProperty::GetImageOffset" ref="a2d094290ef9ec1c439275863e4ac2f1" args="(int imageWidth) const " -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a2d094290ef9ec1c439275863e4ac2f1">GetImageOffset</a> (int imageWidth) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Converts image width into full image offset, with margins. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual wxSize&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#ea61b0869da25fb9eec2648132e4063b">GetImageSize</a> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#ef71581ec3dcd1e17457457def9f9d24">GetIndexInParent</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns position in parent's array.  <a href="#ef71581ec3dcd1e17457457def9f9d24"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b957930ffa8df130af77fac2fedd2172"></a><!-- doxytag: member="wxPGProperty::GetItemAtY" ref="b957930ffa8df130af77fac2fedd2172" args="(unsigned int y, unsigned int lh, unsigned int *nextItemY) const " -->
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetItemAtY</b> (unsigned int y, unsigned int lh, unsigned int *nextItemY) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">const wxString &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#7610de7df326219f954133b2460f7bd9">GetLabel</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns property's label.  <a href="#7610de7df326219f954133b2460f7bd9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ef439150fcdfcc32bebedb278aea9806"></a><!-- doxytag: member="wxPGProperty::GetLastVisibleSubItem" ref="ef439150fcdfcc32bebedb278aea9806" args="() const " -->
const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#ef439150fcdfcc32bebedb278aea9806">GetLastVisibleSubItem</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns last visible sub-property, recursively. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#50aa7238a183862723e1505d5cffc341">GetMainParent</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns highest level non-category, non-root parent.  <a href="#50aa7238a183862723e1505d5cffc341"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="78a3bf23304ec8a483c75fac5002986e"></a><!-- doxytag: member="wxPGProperty::GetMaxLength" ref="78a3bf23304ec8a483c75fac5002986e" args="() const " -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetMaxLength</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#38b7e68b49282ac71d6e4cea7643aea1">GetName</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns property's name with all (non-category, non-root) parents.  <a href="#38b7e68b49282ac71d6e4cea7643aea1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="88aa40a48c253824dcc296bcf1ff9f89"></a><!-- doxytag: member="wxPGProperty::GetParent" ref="88aa40a48c253824dcc296bcf1ff9f89" args="() const " -->
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#88aa40a48c253824dcc296bcf1ff9f89">GetParent</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Return parent of property. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b524de560219c9be11b1b30b3c435156"></a><!-- doxytag: member="wxPGProperty::GetParentState" ref="b524de560219c9be11b1b30b3c435156" args="() const " -->
<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetParentState</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="c19bf570e71050edb3b100a3bdb68734"></a><!-- doxytag: member="wxPGProperty::GetPropertyByName" ref="c19bf570e71050edb3b100a3bdb68734" args="(const wxString &amp;name) const " -->
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#c19bf570e71050edb3b100a3bdb68734">GetPropertyByName</a> (const wxString &amp;name) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns (direct) child property with given name (or NULL if not found). <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#87a8ac6f678f33486b8ae8e6da871e85">GetType</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns type name of property that is compatible with CreatePropertyByType.  <a href="#87a8ac6f678f33486b8ae8e6da871e85"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">wxValidator *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#79cb24032f2aaee16a260ca560957a6f">GetValidator</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Gets assignable version of property's validator.  <a href="#79cb24032f2aaee16a260ca560957a6f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="76fdd0b4782957b18aca2e8b8e170a0d"></a><!-- doxytag: member="wxPGProperty::GetValue" ref="76fdd0b4782957b18aca2e8b8e170a0d" args="() const " -->
wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetValue</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#29f70a60e4844efbebc140270e1a4358">GetValueAsString</a> (int argFlags=0) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns text representation of property's value.  <a href="#29f70a60e4844efbebc140270e1a4358"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a4dc9b698a65205adf6ef4cb165de5ce">GetValueAsVariant</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns value as wxVariant.  <a href="#a4dc9b698a65205adf6ef4cb165de5ce"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2565aba121d1df376d7ba7c16fbc0553"></a><!-- doxytag: member="wxPGProperty::GetValueImage" ref="2565aba121d1df376d7ba7c16fbc0553" args="() const " -->
wxBitmap *&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetValueImage</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2bd48fcde84af196915c8a439e085c63"></a><!-- doxytag: member="wxPGProperty::GetValueRef" ref="2bd48fcde84af196915c8a439e085c63" args="() const " -->
const wxVariant &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetValueRef</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">wxVariant &amp;&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#1a033fa4b022acbd739c2ec5af337a3e">GetValueRef</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns reference to the internal stored value.  <a href="#1a033fa4b022acbd739c2ec5af337a3e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9133d43d6e539e2814ed28d2f37d953e"></a><!-- doxytag: member="wxPGProperty::GetValueString" ref="9133d43d6e539e2814ed28d2f37d953e" args="(int argFlags=0) const " -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#9133d43d6e539e2814ed28d2f37d953e">GetValueString</a> (int argFlags=0) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Same as GetValueAsString, except takes common value into account. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="729634b1a2f7574e4f98f48bcfe5b937"></a><!-- doxytag: member="wxPGProperty::GetValueType" ref="729634b1a2f7574e4f98f48bcfe5b937" args="() const " -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetValueType</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a36f8e8d6f0e48c9bbb105905220605f">GetY</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns coordinate to the top y of the property.  <a href="#a36f8e8d6f0e48c9bbb105905220605f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6a5c4a20a9ef292925de326efbe6b42e"></a><!-- doxytag: member="wxPGProperty::HasFlag" ref="6a5c4a20a9ef292925de326efbe6b42e" args="(FlagType flag) const " -->
FlagType&nbsp;</td><td class="memItemRight" valign="bottom"><b>HasFlag</b> (FlagType flag) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="58d3125c3b7eebef540363d5720eafa3"></a><!-- doxytag: member="wxPGProperty::HasVisibleChildren" ref="58d3125c3b7eebef540363d5720eafa3" args="() const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#58d3125c3b7eebef540363d5720eafa3">HasVisibleChildren</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property has even one visible child. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#d1bd50c81626773176c5d951d0e34c60">Hide</a> (bool hide, int flags=wxPG_RECURSE)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Hides or reveals the property.  <a href="#d1bd50c81626773176c5d951d0e34c60"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#83f63b596fd2a2a677d8096485f0299e">Index</a> (const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *p) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns index of given sub-property.  <a href="#83f63b596fd2a2a677d8096485f0299e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#572697e79fd8785f3477cc7f8d72f5d5">InsertChild</a> (int index, <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *childProperty)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Use this member function to add independent (ie.  <a href="#572697e79fd8785f3477cc7f8d72f5d5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#be0d0b4e8b177ef6805c74b5c048f593">InsertChoice</a> (const wxString &amp;label, int index, int value=INT_MAX)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Adds entry to property's <a class="el" href="classwxPGChoices.htm" title="Helper class for managing choices for properties.">wxPGChoices</a> and editor control (if it is active).  <a href="#be0d0b4e8b177ef6805c74b5c048f593"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#d0a8e61a356e1366170967d56af66231">IntToValue</a> (wxVariant &amp;value, int number, int argFlags=0) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Converts 'number' (including choice selection) into proper value 'variant'.  <a href="#d0a8e61a356e1366170967d56af66231"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="af32ea058af511067b6f496dd55072eb"></a><!-- doxytag: member="wxPGProperty::IsCategory" ref="af32ea058af511067b6f496dd55072eb" args="() const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#af32ea058af511067b6f496dd55072eb">IsCategory</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if this property is actually a <a class="el" href="classwxPropertyCategory.htm" title="Category (caption) property.">wxPropertyCategory</a>. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fbcf920da6022bfdbc6050aea3ded3be"></a><!-- doxytag: member="wxPGProperty::IsEnabled" ref="fbcf920da6022bfdbc6050aea3ded3be" args="() const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>IsEnabled</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d49b8eb1fcd8b275ce20b2f18be05755"></a><!-- doxytag: member="wxPGProperty::IsExpanded" ref="d49b8eb1fcd8b275ce20b2f18be05755" args="() const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>IsExpanded</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="fe137b54ecac687a41ebd755600c5776"></a><!-- doxytag: member="wxPGProperty::IsFlagSet" ref="fe137b54ecac687a41ebd755600c5776" args="(FlagType flag) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>IsFlagSet</b> (FlagType flag) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a9313d6d246d9cd3643a6bb34808c695"></a><!-- doxytag: member="wxPGProperty::IsRoot" ref="a9313d6d246d9cd3643a6bb34808c695" args="() const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a9313d6d246d9cd3643a6bb34808c695">IsRoot</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if this property is actually a wxRootProperty. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="cdf082726581da7c25b2e2fb991f5490"></a><!-- doxytag: member="wxPGProperty::IsSomeParent" ref="cdf082726581da7c25b2e2fb991f5490" args="(wxPGProperty *candidate_parent) const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>IsSomeParent</b> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *candidate_parent) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#ff7d5250185ac44e7a0629d8f7823401">IsSubProperty</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if this is a sub-property.  <a href="#ff7d5250185ac44e7a0629d8f7823401"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a5a9ebcac6c954178f97a4c100bb3ac0">IsTextEditable</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if property has editable wxTextCtrl when selected.  <a href="#a5a9ebcac6c954178f97a4c100bb3ac0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="785c3679e91f5b878bcbaec31aa1bccc"></a><!-- doxytag: member="wxPGProperty::IsValueUnspecified" ref="785c3679e91f5b878bcbaec31aa1bccc" args="() const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><b>IsValueUnspecified</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="8050a0de4f8625d544851fbcacb1961c"></a><!-- doxytag: member="wxPGProperty::IsVisible" ref="8050a0de4f8625d544851fbcacb1961c" args="() const " -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#8050a0de4f8625d544851fbcacb1961c">IsVisible</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if all parents expanded. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#f2f7f8a157295b8d56138f59573a8254">Item</a> (unsigned int i) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns sub-property at index i.  <a href="#f2f7f8a157295b8d56138f59573a8254"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a7050b85b858ddedbdf851e44d303427"></a><!-- doxytag: member="wxPGProperty::Last" ref="a7050b85b858ddedbdf851e44d303427" args="() const " -->
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a7050b85b858ddedbdf851e44d303427">Last</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns last sub-property. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#d0b00df4a3916cb80adfa1227c70baf4">OnCustomPaint</a> (wxDC &amp;dc, const wxRect &amp;rect, <a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> &amp;paintdata)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Override to paint an image in front of the property value text or drop-down list item (but only if <a class="el" href="classwxPGProperty.htm#8c4008c4d7d148bd06f9db590301df76" title="Returns size of the custom painted image in front of property.">wxPGProperty::OnMeasureImage</a> is overridden as well).  <a href="#d0b00df4a3916cb80adfa1227c70baf4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#16fbe26240bf47ab0a9a02d21781da73">OnEvent</a> (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *propgrid, wxWindow *wnd_primary, wxEvent &amp;event)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Events received by editor widgets are processed here.  <a href="#16fbe26240bf47ab0a9a02d21781da73"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual wxSize&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#8c4008c4d7d148bd06f9db590301df76">OnMeasureImage</a> (int item=-1) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns size of the custom painted image in front of property.  <a href="#8c4008c4d7d148bd06f9db590301df76"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#e5c4f47d3ff609d19346b994a9a25acb">OnSetValue</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This virtual function is called after m_value has been set.  <a href="#e5c4f47d3ff609d19346b994a9a25acb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#cbffb1a7f8dee530918ff74c5cb70363">OnValidationFailure</a> (wxVariant &amp;pendingValue)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Called whenever validation has failed with given pending value.  <a href="#cbffb1a7f8dee530918ff74c5cb70363"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#d7221ec4c516aef1a5245f762402b9be">PrepareValueForDialogEditing</a> (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *propgrid)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Updates property value in case there were last minute changes.  <a href="#d7221ec4c516aef1a5245f762402b9be"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#905f5ca0479004626e7670dbbebf8368">RecreateEditor</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">If property's editor is created this forces its recreation.  <a href="#905f5ca0479004626e7670dbbebf8368"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#167afcb85ed4d527e34567e32a0cc714">RefreshChildren</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Refresh values of child properties.  <a href="#167afcb85ed4d527e34567e32a0cc714"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f154d4b9d070c594a75164a5482d6888"></a><!-- doxytag: member="wxPGProperty::RefreshEditor" ref="f154d4b9d070c594a75164a5482d6888" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#f154d4b9d070c594a75164a5482d6888">RefreshEditor</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">If property's editor is active, then update it's value. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#418c1539969b7a0a9378a3411a5680a6">SetAttribute</a> (const wxString &amp;name, wxVariant value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets an attribute for this property.  <a href="#418c1539969b7a0a9378a3411a5680a6"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5d87a9ac5a8298d8a9e5cff8d734eafe"></a><!-- doxytag: member="wxPGProperty::SetAttributes" ref="5d87a9ac5a8298d8a9e5cff8d734eafe" args="(const wxPGAttributeStorage &amp;attributes)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#5d87a9ac5a8298d8a9e5cff8d734eafe">SetAttributes</a> (const <a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a> &amp;attributes)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets attributes from a comma-delimited string. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#9ff7ee5a218d9e1f9a3d44c8246e4d5e">SetCell</a> (int column, <a class="el" href="classwxPGCell.htm">wxPGCell</a> *cellObj)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets cell information for given column.  <a href="#9ff7ee5a218d9e1f9a3d44c8246e4d5e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6db7d083c73485d75c68f9bc930af036"></a><!-- doxytag: member="wxPGProperty::SetChoices" ref="6db7d083c73485d75c68f9bc930af036" args="(const wxArrayString &amp;labels, const wxArrayInt &amp;values=wxArrayInt())" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#6db7d083c73485d75c68f9bc930af036">SetChoices</a> (const wxArrayString &amp;labels, const wxArrayInt &amp;values=wxArrayInt())</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets new set of choices for property. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#7275467270d2c7ac3f847f4d1b6a1194">SetChoices</a> (<a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;choices)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets new set of choices for property.  <a href="#7275467270d2c7ac3f847f4d1b6a1194"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#613b4866a6b2281bf0382b0d883feb86">SetChoiceSelection</a> (int newValue, const wxPGChoiceInfo &amp;choiceInfo)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Changes value of a property with choices, but only works if the value type is long or string.  <a href="#613b4866a6b2281bf0382b0d883feb86"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="d8a812e51f3e63e27ee5212f7b29d71f"></a><!-- doxytag: member="wxPGProperty::SetChoicesExclusive" ref="d8a812e51f3e63e27ee5212f7b29d71f" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#d8a812e51f3e63e27ee5212f7b29d71f">SetChoicesExclusive</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">If property has choices and they are not yet exclusive, new such copy of them will be created. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#5102b203f2839cd2f2d0d5d1a2f2de83">SetClientData</a> (ClientDataType clientData)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets client data (void*) of a property.  <a href="#5102b203f2839cd2f2d0d5d1a2f2de83"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#588ce65663bca1c5cff81cd838a0c97a">SetCommonValue</a> (int commonValue)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets common value selected for this property.  <a href="#588ce65663bca1c5cff81cd838a0c97a"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#7722a2c503051fd6ef1477a9c0c081a4">SetDefaultValue</a> (wxVariant &amp;value)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set default value of a property.  <a href="#7722a2c503051fd6ef1477a9c0c081a4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#90294ea6cae6cf504d032b46787bb6e4">SetEditor</a> (const wxString &amp;editorName)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets editor for a property.  <a href="#90294ea6cae6cf504d032b46787bb6e4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#2cd2e6f0b30a1ab789f9ea8b58226260">SetEditor</a> (const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *editor)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets editor for a property.  <a href="#2cd2e6f0b30a1ab789f9ea8b58226260"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="13ea56970855a72cfbee4d190302d5d3"></a><!-- doxytag: member="wxPGProperty::SetExpanded" ref="13ea56970855a72cfbee4d190302d5d3" args="(bool expanded)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetExpanded</b> (bool expanded)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="eaa77e366e277134ece29e48d94d3f05"></a><!-- doxytag: member="wxPGProperty::SetFlag" ref="eaa77e366e277134ece29e48d94d3f05" args="(FlagType flag)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#eaa77e366e277134ece29e48d94d3f05">SetFlag</a> (FlagType flag)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets given property flag(s). <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="89a45508d2aa8418fde8a07eab001e87"></a><!-- doxytag: member="wxPGProperty::SetFlagRecursively" ref="89a45508d2aa8418fde8a07eab001e87" args="(FlagType flag, bool set)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetFlagRecursively</b> (FlagType flag, bool set)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a0b458523923d5c753d07f59f382931e">SetFlagsFromString</a> (const wxString &amp;str)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets flags from a '|' delimited string.  <a href="#a0b458523923d5c753d07f59f382931e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="839af036b24fc35696f0ef3cb2b0670a"></a><!-- doxytag: member="wxPGProperty::SetHelpString" ref="839af036b24fc35696f0ef3cb2b0670a" args="(const wxString &amp;helpString)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetHelpString</b> (const wxString &amp;helpString)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#5acdc1db23a6e219de6619bc54e1a2e3">SetLabel</a> (const wxString &amp;label)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets property's label.  <a href="#5acdc1db23a6e219de6619bc54e1a2e3"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a74671893440ce2a0f2a0e47ba897ad5"></a><!-- doxytag: member="wxPGProperty::SetMaxLength" ref="a74671893440ce2a0f2a0e47ba897ad5" args="(int maxLen)" -->
bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a74671893440ce2a0f2a0e47ba897ad5">SetMaxLength</a> (int maxLen)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set max length of text editor. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="79f28d83cf79c6bb87337183fb8c56f5"></a><!-- doxytag: member="wxPGProperty::SetName" ref="79f28d83cf79c6bb87337183fb8c56f5" args="(const wxString &amp;newName)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetName</b> (const wxString &amp;newName)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9eb7d1f243c6fb993b3563c241b2ef4a"></a><!-- doxytag: member="wxPGProperty::SetValidator" ref="9eb7d1f243c6fb993b3563c241b2ef4a" args="(const wxValidator &amp;validator)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#9eb7d1f243c6fb993b3563c241b2ef4a">SetValidator</a> (const wxValidator &amp;validator)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Sets wxValidator for a property. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#a8e771a01a93fe94f87a449f430afa79">SetValue</a> (wxVariant value, wxVariant *pList=NULL, int flags=wxPG_SETVAL_REFRESH_EDITOR)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Call this to set value of the property.  <a href="#a8e771a01a93fe94f87a449f430afa79"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#ed06089224f01494563f2192809e5706">SetValueFromInt</a> (long value, int flags=0)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Converts integer to a value, and if succesfull, calls <a class="el" href="classwxPGProperty.htm#a8e771a01a93fe94f87a449f430afa79" title="Call this to set value of the property.">SetValue()</a> on it.  <a href="#ed06089224f01494563f2192809e5706"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#55f438205fd7684d76a9435cbaec6aa5">SetValueFromString</a> (const wxString &amp;text, int flags=wxPG_PROGRAMMATIC_VALUE)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Converts string to a value, and if succesfull, calls <a class="el" href="classwxPGProperty.htm#a8e771a01a93fe94f87a449f430afa79" title="Call this to set value of the property.">SetValue()</a> on it.  <a href="#55f438205fd7684d76a9435cbaec6aa5"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#5c5be1292d329945b0a24e33db485207">SetValueImage</a> (wxBitmap &amp;bmp)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set wxBitmap in front of the value.  <a href="#5c5be1292d329945b0a24e33db485207"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#de9385b0bc3c9ba4833b271157e87354">SetValueInEvent</a> (wxVariant value) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Call in <a class="el" href="classwxPGProperty.htm#16fbe26240bf47ab0a9a02d21781da73" title="Events received by editor widgets are processed here.">OnEvent()</a>, OnButtonClick() etc.  <a href="#de9385b0bc3c9ba4833b271157e87354"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4e55506bbc49f0b7d447df71a00f2df6"></a><!-- doxytag: member="wxPGProperty::SetValueToUnspecified" ref="4e55506bbc49f0b7d447df71a00f2df6" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetValueToUnspecified</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#46da7a139ba90c3852710f181280667d">SetWasModified</a> (bool set=true)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Call with 'false' in OnSetValue to cancel value changes after all (ie.  <a href="#46da7a139ba90c3852710f181280667d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#974a9b01c1f88cf4db630b6895453db8">StringToValue</a> (wxVariant &amp;variant, const wxString &amp;text, int argFlags=0) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Converts 'text' into proper value 'variant'.  <a href="#974a9b01c1f88cf4db630b6895453db8"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#7b2f517388b0f0038354d5fd9f0bab43">UpdateParentValues</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Updates composed values of parent non-category properties, recursively.  <a href="#7b2f517388b0f0038354d5fd9f0bab43"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1b3778f001619e78b497e6ee18fb9019"></a><!-- doxytag: member="wxPGProperty::UsesAutoUnspecified" ref="1b3778f001619e78b497e6ee18fb9019" args="() const " -->
FlagType&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#1b3778f001619e78b497e6ee18fb9019">UsesAutoUnspecified</a> () const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns true if containing grid uses wxPG_EX_AUTO_UNSPECIFIED_VALUES. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#2e0c041aa3e19a5934a02c65b53f9f7d">ValidateValue</a> (wxVariant &amp;value, <a class="el" href="structwxPGValidationInfo.htm">wxPGValidationInfo</a> &amp;validationInfo) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Implement this function in derived class to check the value.  <a href="#2e0c041aa3e19a5934a02c65b53f9f7d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#dde08613b47eda8e324483ac754e8920">wxPGProperty</a> (const wxString &amp;label, const wxString &amp;name)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Constructor.  <a href="#dde08613b47eda8e324483ac754e8920"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#de8edb58a7853a539664c77b2d9c9c81">wxPGProperty</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Basic constructor.  <a href="#de8edb58a7853a539664c77b2d9c9c81"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#c18fca1cac5343b510220929a4f6a0bc">~wxPGProperty</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Virtual destructor.  <a href="#c18fca1cac5343b510220929a4f6a0bc"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#6797d35591eb3d6e63067d7d073c445f">AddChild</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *prop)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Call this to add sub-properties which will become private, fixed children.  <a href="#6797d35591eb3d6e63067d7d073c445f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#0b308417b0882f78d9cac96df803da2b">AddChild2</a> (<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *prop, int index=-1, bool correct_mode=true)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This is used by Insert etc.  <a href="#0b308417b0882f78d9cac96df803da2b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#32e809d80c92353d050fb028314edb91">DoEmpty</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Deletes all sub-properties.  <a href="#32e809d80c92353d050fb028314edb91"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1aff461e3784961db83ba54428204568"></a><!-- doxytag: member="wxPGProperty::DoSetName" ref="1aff461e3784961db83ba54428204568" args="(const wxString &amp;str)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>DoSetName</b> (const wxString &amp;str)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3547f1c5b4ec5ca6b8a6aea1027c4096"></a><!-- doxytag: member="wxPGProperty::GetColumnText" ref="3547f1c5b4ec5ca6b8a6aea1027c4096" args="(unsigned int col) const " -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#3547f1c5b4ec5ca6b8a6aea1027c4096">GetColumnText</a> (unsigned int col) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns text for given column. <br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxPGProperty.htm#65162fded9ccb4293c2b0fd80fd3b9e1">GetPropertyByNameWH</a> (const wxString &amp;name, unsigned int hintIndex) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns (direct) child property with given name (or NULL if not found), with hint index.  <a href="#65162fded9ccb4293c2b0fd80fd3b9e1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4631404bbc28596559cdc37a088ec9f2"></a><!-- doxytag: member="wxPGProperty::GetY2" ref="4631404bbc28596559cdc37a088ec9f2" args="(int lh) const " -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetY2</b> (int lh) const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3d14475b80eab26429289b535c77945b"></a><!-- doxytag: member="wxPGProperty::PrepareSubProperties" ref="3d14475b80eab26429289b535c77945b" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>PrepareSubProperties</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="f7e9a4c245025e118373a3c876c7904d"></a><!-- doxytag: member="wxPGProperty::SetParentalType" ref="f7e9a4c245025e118373a3c876c7904d" args="(int flag)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetParentalType</b> (int flag)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e66b8f8247e304d78ebadb6d983a7c18"></a><!-- doxytag: member="wxPGProperty::SetParentState" ref="e66b8f8247e304d78ebadb6d983a7c18" args="(wxPropertyGridState *pstate)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SetParentState</b> (<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *pstate)</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="b4f3d7b5fd531d3336c34b20f6a02a93"></a><!-- doxytag: member="wxPGProperty::SubPropsChanged" ref="b4f3d7b5fd531d3336c34b20f6a02a93" args="(int oldSelInd=&#45;1)" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>SubPropsChanged</b> (int oldSelInd=-1)</td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="84c993bb166b82ab7fac4b4b2c5c4d19"></a><!-- doxytag: member="wxPGProperty::m_arrIndex" ref="84c993bb166b82ab7fac4b4b2c5c4d19" args="" -->
unsigned int&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_arrIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="826614109983bfa1d5299d1e994a1891"></a><!-- doxytag: member="wxPGProperty::m_attributes" ref="826614109983bfa1d5299d1e994a1891" args="" -->
<a class="el" href="classwxPGAttributeStorage.htm">wxPGAttributeStorage</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_attributes</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="bf9fef30bb9fbd387aa634a7a7ab70ba"></a><!-- doxytag: member="wxPGProperty::m_bgColIndex" ref="bf9fef30bb9fbd387aa634a7a7ab70ba" args="" -->
unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_bgColIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="9c57cc0e551cc3d495104a457335ee3f"></a><!-- doxytag: member="wxPGProperty::m_cells" ref="9c57cc0e551cc3d495104a457335ee3f" args="" -->
wxArrayPtrVoid&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_cells</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="46ad48cf10b5c41572a45c1a39f45a88"></a><!-- doxytag: member="wxPGProperty::m_children" ref="46ad48cf10b5c41572a45c1a39f45a88" args="" -->
wxArrayPtrVoid&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_children</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="7ea21919dce1a576cb892fceb0950edf"></a><!-- doxytag: member="wxPGProperty::m_clientData" ref="7ea21919dce1a576cb892fceb0950edf" args="" -->
ClientDataType&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_clientData</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3c2380630884adee70b3862bfae00eb0"></a><!-- doxytag: member="wxPGProperty::m_commonValue" ref="3c2380630884adee70b3862bfae00eb0" args="" -->
int&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_commonValue</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a43e24d056a622dc9810e42de315b3f2"></a><!-- doxytag: member="wxPGProperty::m_customEditor" ref="a43e24d056a622dc9810e42de315b3f2" args="" -->
const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_customEditor</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="06ab2c180ea47e4826314dc34227fa2a"></a><!-- doxytag: member="wxPGProperty::m_depth" ref="06ab2c180ea47e4826314dc34227fa2a" args="" -->
unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_depth</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="4e7b596662266dafed249a29278db385"></a><!-- doxytag: member="wxPGProperty::m_depthBgCol" ref="4e7b596662266dafed249a29278db385" args="" -->
unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_depthBgCol</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="1ecd12a864fdaa348c4af27d2f749848"></a><!-- doxytag: member="wxPGProperty::m_fgColIndex" ref="1ecd12a864fdaa348c4af27d2f749848" args="" -->
unsigned char&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_fgColIndex</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="38a893dd0afd55af68003a65ef9469ef"></a><!-- doxytag: member="wxPGProperty::m_flags" ref="38a893dd0afd55af68003a65ef9469ef" args="" -->
FlagType&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_flags</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="213c854b63e591e096cf4f5ab35f2b0f"></a><!-- doxytag: member="wxPGProperty::m_helpString" ref="213c854b63e591e096cf4f5ab35f2b0f" args="" -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_helpString</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3e0236d1ce44618abaf8420091fcd3b6"></a><!-- doxytag: member="wxPGProperty::m_label" ref="3e0236d1ce44618abaf8420091fcd3b6" args="" -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_label</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="0a26eaa0fb2f3b1b777e5c55f3b2a08a"></a><!-- doxytag: member="wxPGProperty::m_maxLen" ref="0a26eaa0fb2f3b1b777e5c55f3b2a08a" args="" -->
short&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_maxLen</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e0567605bf703d69601ff731ab0e82f6"></a><!-- doxytag: member="wxPGProperty::m_name" ref="e0567605bf703d69601ff731ab0e82f6" args="" -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_name</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="39fc9015b5887fe682ac83cd9092fa6b"></a><!-- doxytag: member="wxPGProperty::m_parent" ref="39fc9015b5887fe682ac83cd9092fa6b" args="" -->
<a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_parent</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="cbc84187fc9c2776fb4b987280544ce8"></a><!-- doxytag: member="wxPGProperty::m_parentState" ref="cbc84187fc9c2776fb4b987280544ce8" args="" -->
<a class="el" href="classwxPropertyGridState.htm">wxPropertyGridState</a> *&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_parentState</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="a64843ce4e57acfe4597cef0f787df8d"></a><!-- doxytag: member="wxPGProperty::m_validator" ref="a64843ce4e57acfe4597cef0f787df8d" args="" -->
wxValidator *&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_validator</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="5214c12a20daa62be1746998eaa6bdbb"></a><!-- doxytag: member="wxPGProperty::m_value" ref="5214c12a20daa62be1746998eaa6bdbb" args="" -->
wxVariant&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_value</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2f7dccbbf254c99e521af47225169e35"></a><!-- doxytag: member="wxPGProperty::m_valueBitmap" ref="2f7dccbbf254c99e521af47225169e35" args="" -->
wxBitmap *&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_valueBitmap</b></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
<a class="el" href="classwxPGProperty.htm" title="wxPGProperty is base class for all wxPropertyGrid properties.">wxPGProperty</a> is base class for all <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> properties. <hr><h2>Constructor &amp; Destructor Documentation</h2>
<a class="anchor" name="de8edb58a7853a539664c77b2d9c9c81"></a><!-- doxytag: member="wxPGProperty::wxPGProperty" ref="de8edb58a7853a539664c77b2d9c9c81" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxPGProperty::wxPGProperty           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Basic constructor. 
<p>
Should not be necessary to override. 
</div>
</div><p>
<a class="anchor" name="dde08613b47eda8e324483ac754e8920"></a><!-- doxytag: member="wxPGProperty::wxPGProperty" ref="dde08613b47eda8e324483ac754e8920" args="(const wxString &amp;label, const wxString &amp;name)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxPGProperty::wxPGProperty           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Constructor. 
<p>
Real used property classes should have constructor of this style:<p>
<div class="fragment"><pre class="fragment">        <span class="comment">// If T is a class, then it should be a constant reference</span>
        <span class="comment">// (e.g. const T&amp; ) instead.</span>
        MyProperty( <span class="keyword">const</span> wxString&amp; label, <span class="keyword">const</span> wxString&amp; name, T value )
            : <a class="code" href="classwxPGProperty.htm" title="wxPGProperty is base class for all wxPropertyGrid properties.">wxPGProperty</a> ()
        {
            <span class="comment">// Generally recommended way to set the initial value</span>
            <span class="comment">// (as it should work in pretty much 100% of cases).</span>
            wxVariant variant;
            variant &lt;&lt; value;
            <a class="code" href="classwxPGProperty.htm#a8e771a01a93fe94f87a449f430afa79" title="Call this to set value of the property.">SetValue</a>(variant);

            <span class="comment">// If has child properties then create them here. For example:</span>
            <span class="comment">//     AddPrivateChild( new wxStringProperty(wxT("Subprop 1"),</span>
            <span class="comment">//                                           wxPG_LABEL,</span>
            <span class="comment">//                                           value.GetSubProp1()));</span>
        }
</pre></div><p>
Of course, in this example, <a class="el" href="classwxPGProperty.htm" title="wxPGProperty is base class for all wxPropertyGrid properties.">wxPGProperty</a> could actually any other property class. 
</div>
</div><p>
<a class="anchor" name="c18fca1cac5343b510220929a4f6a0bc"></a><!-- doxytag: member="wxPGProperty::~wxPGProperty" ref="c18fca1cac5343b510220929a4f6a0bc" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxPGProperty::~wxPGProperty           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Virtual destructor. 
<p>
It is customary for derived properties to implement this. 
</div>
</div><p>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="e6d67a740b88f22b21e177b27d633d5a"></a><!-- doxytag: member="wxPGProperty::AcquireCell" ref="e6d67a740b88f22b21e177b27d633d5a" args="(unsigned int column)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGCell.htm">wxPGCell</a>* wxPGProperty::AcquireCell           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>column</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns <a class="el" href="classwxPGCell.htm" title="Base class for simple wxPropertyGrid cell information.">wxPGCell</a> of given column, NULL if none. 
<p>
If valid object is returned, caller will gain its ownership. 
</div>
</div><p>
<a class="anchor" name="6797d35591eb3d6e63067d7d073c445f"></a><!-- doxytag: member="wxPGProperty::AddChild" ref="6797d35591eb3d6e63067d7d073c445f" args="(wxPGProperty *prop)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::AddChild           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>prop</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Call this to add sub-properties which will become private, fixed children. 
<p>
To handle value changes to and from these properties, you must implement <a class="el" href="classwxPGProperty.htm#167afcb85ed4d527e34567e32a0cc714" title="Refresh values of child properties.">RefreshChildren()</a> and <a class="el" href="classwxPGProperty.htm#ce7a9dc69fdf8185cff04c1604cb4fbd" title="Called after value of a child property has been altered.">ChildChanged()</a> in derived property class.<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>If you wish to add independent child properties, use <a class="el" href="classwxPGProperty.htm#572697e79fd8785f3477cc7f8d72f5d5" title="Use this member function to add independent (ie.">InsertChild()</a> instead. If you wish to add private child properties outside derived property class, use <a class="el" href="classwxPGProperty.htm#bec97e799f836560d4f65c7c5fc97f6f" title="Call this to add sub-properties which will become private, fixed children.">AddPrivateChild()</a>.</dd></dl>
<dl class="deprecated" compact><dt><b><a class="el" href="deprecated.htm#_deprecated000004">Deprecated:</a></b></dt><dd>Since <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> 1.4.5. Use <a class="el" href="classwxPGProperty.htm#bec97e799f836560d4f65c7c5fc97f6f" title="Call this to add sub-properties which will become private, fixed children.">AddPrivateChild()</a> instead.</dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#bec97e799f836560d4f65c7c5fc97f6f" title="Call this to add sub-properties which will become private, fixed children.">AddPrivateChild()</a>, <a class="el" href="classwxPGProperty.htm#0743820583e7066eb726ecbdfc2b2742" title="Appends a new child property.">AppendChild()</a>, <a class="el" href="classwxPGProperty.htm#572697e79fd8785f3477cc7f8d72f5d5" title="Use this member function to add independent (ie.">InsertChild()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="0b308417b0882f78d9cac96df803da2b"></a><!-- doxytag: member="wxPGProperty::AddChild2" ref="0b308417b0882f78d9cac96df803da2b" args="(wxPGProperty *prop, int index=&#45;1, bool correct_mode=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::AddChild2           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>prop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>index</em> = <code>-1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>correct_mode</em> = <code>true</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This is used by Insert etc. 
<p>

</div>
</div><p>
<a class="anchor" name="bec97e799f836560d4f65c7c5fc97f6f"></a><!-- doxytag: member="wxPGProperty::AddPrivateChild" ref="bec97e799f836560d4f65c7c5fc97f6f" args="(wxPGProperty *prop)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::AddPrivateChild           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>prop</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Call this to add sub-properties which will become private, fixed children. 
<p>
To handle value changes to and from these properties, you must implement <a class="el" href="classwxPGProperty.htm#167afcb85ed4d527e34567e32a0cc714" title="Refresh values of child properties.">RefreshChildren()</a> and <a class="el" href="classwxPGProperty.htm#ce7a9dc69fdf8185cff04c1604cb4fbd" title="Called after value of a child property has been altered.">ChildChanged()</a> in derived property class.<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>If you wish to add independent child properties, use <a class="el" href="classwxPGProperty.htm#0743820583e7066eb726ecbdfc2b2742" title="Appends a new child property.">AppendChild()</a> or <a class="el" href="classwxPGProperty.htm#572697e79fd8785f3477cc7f8d72f5d5" title="Use this member function to add independent (ie.">InsertChild()</a> instead.</dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#0743820583e7066eb726ecbdfc2b2742" title="Appends a new child property.">AppendChild()</a>, <a class="el" href="classwxPGProperty.htm#572697e79fd8785f3477cc7f8d72f5d5" title="Use this member function to add independent (ie.">InsertChild()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="0743820583e7066eb726ecbdfc2b2742"></a><!-- doxytag: member="wxPGProperty::AppendChild" ref="0743820583e7066eb726ecbdfc2b2742" args="(wxPGProperty *prop)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGProperty::AppendChild           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>prop</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Appends a new child property. 
<p>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#572697e79fd8785f3477cc7f8d72f5d5" title="Use this member function to add independent (ie.">InsertChild()</a>, <a class="el" href="classwxPGProperty.htm#bec97e799f836560d4f65c7c5fc97f6f" title="Call this to add sub-properties which will become private, fixed children.">AddPrivateChild()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="f823df743b115386be4d3e7f1412afb1"></a><!-- doxytag: member="wxPGProperty::AppendChoice" ref="f823df743b115386be4d3e7f1412afb1" args="(const wxString &amp;label, int value=INT_MAX)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPGProperty::AppendChoice           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>value</em> = <code>INT_MAX</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Adds entry to property's <a class="el" href="classwxPGChoices.htm" title="Helper class for managing choices for properties.">wxPGChoices</a> and editor control (if it is active). 
<p>
Returns index of item added. 
</div>
</div><p>
<a class="anchor" name="4f8871590e381ee0d63efc72ed76bba9"></a><!-- doxytag: member="wxPGProperty::AreAllChildrenSpecified" ref="4f8871590e381ee0d63efc72ed76bba9" args="(wxVariant *pendingList=NULL) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::AreAllChildrenSpecified           </td>
          <td>(</td>
          <td class="paramtype">wxVariant *&nbsp;</td>
          <td class="paramname"> <em>pendingList</em> = <code>NULL</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Determines, recursively, if all children are not unspecified. 
<p>
Takes values in given list into account. 
</div>
</div><p>
<a class="anchor" name="61e04603ffafaa3a1216efd90f0c444d"></a><!-- doxytag: member="wxPGProperty::CanHaveExtraChildren" ref="61e04603ffafaa3a1216efd90f0c444d" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::CanHaveExtraChildren           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns true if extra children can be added for this property (i.e. 
<p>
it is <a class="el" href="classwxPropertyCategory.htm" title="Category (caption) property.">wxPropertyCategory</a> or <a class="el" href="classwxCustomProperty.htm" title="This is a somewhat inefficient but versatile property class.">wxCustomProperty</a>) 
</div>
</div><p>
<a class="anchor" name="ce7a9dc69fdf8185cff04c1604cb4fbd"></a><!-- doxytag: member="wxPGProperty::ChildChanged" ref="ce7a9dc69fdf8185cff04c1604cb4fbd" args="(wxVariant &amp;thisValue, int childIndex, wxVariant &amp;childValue) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPGProperty::ChildChanged           </td>
          <td>(</td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>thisValue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>childIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>childValue</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Called after value of a child property has been altered. 
<p>
Note that this function is usually called at the time that value of this property, or given child property, is still pending for change.<p>
Sample pseudo-code implementation:<p>
<div class="fragment"><pre class="fragment">        <span class="keywordtype">void</span> <a class="code" href="classwxPGProperty.htm#ce7a9dc69fdf8185cff04c1604cb4fbd" title="Called after value of a child property has been altered.">MyProperty::ChildChanged</a>( wxVariant&amp; thisValue, <span class="keywordtype">int</span> childIndex, wxVariant&amp; childValue )<span class="keyword"> const</span>
<span class="keyword">        </span>{
            <span class="comment">// Acquire reference to actual type of data stored in variant</span>
            <span class="comment">// (TFromVariant only exists if wxPropertyGrid's wxVariant-macros were used to create</span>
            <span class="comment">// the variant class).</span>
            T&amp; data = TFromVariant(thisValue);

            <span class="comment">// Copy childValue into data.</span>
            <span class="keywordflow">switch</span> ( childIndex )
            {
                <span class="keywordflow">case</span> 0:
                    data.SetSubProp1( childvalue.GetLong() );
                    <span class="keywordflow">break</span>;
                <span class="keywordflow">case</span> 1:
                    data.SetSubProp2( childvalue.GetString() );
                    <span class="keywordflow">break</span>;
                ...
            }
        }
</pre></div><p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>thisValue</em>&nbsp;</td><td>Value of this property, that should be altered. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>childIndex</em>&nbsp;</td><td>Index of child changed (you can use Item(childIndex) to get). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>childValue</em>&nbsp;</td><td>Value of the child property. </td></tr>
  </table>
</dl>

<p>Reimplemented in <a class="el" href="classwxFontProperty.htm#85b232fa2c960b55813c1a92a75c88ff">wxFontProperty</a>, <a class="el" href="classwxPGRootProperty.htm#41c2e4cb7dd99afb88f91e93d906b864">wxPGRootProperty</a>, <a class="el" href="classwxPropertyCategory.htm#a7b59821d008f0f7ccab0453e175726a">wxPropertyCategory</a>, <a class="el" href="classwxFlagsProperty.htm#a307a2f9cb827c82cb1e9b927a966138">wxFlagsProperty</a>, and <a class="el" href="classwxCustomProperty.htm#db6fb5bfa9463eb64f60d07e82755267">wxCustomProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="137f1b7ea16f1f18fcc3e50ec107da1f"></a><!-- doxytag: member="wxPGProperty::DeleteChoice" ref="137f1b7ea16f1f18fcc3e50ec107da1f" args="(int index)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::DeleteChoice           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>index</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Removes entry from property's <a class="el" href="classwxPGChoices.htm" title="Helper class for managing choices for properties.">wxPGChoices</a> and editor control (if it is active). 
<p>
If selected item is deleted, then the value is set to unspecified. 
</div>
</div><p>
<a class="anchor" name="32e809d80c92353d050fb028314edb91"></a><!-- doxytag: member="wxPGProperty::DoEmpty" ref="32e809d80c92353d050fb028314edb91" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::DoEmpty           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Deletes all sub-properties. 
<p>

</div>
</div><p>
<a class="anchor" name="4417dd87a03fd41d6e4b831c5b2a4548"></a><!-- doxytag: member="wxPGProperty::DoGetAttribute" ref="4417dd87a03fd41d6e4b831c5b2a4548" args="(const wxString &amp;name) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxVariant wxPGProperty::DoGetAttribute           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns value of an attribute. 
<p>
Override if custom handling of attributes is needed.<p>
Default implementation simply return NULL variant. 
</div>
</div><p>
<a class="anchor" name="f1b9f11eab24b1c1331f3f4a663ff98e"></a><!-- doxytag: member="wxPGProperty::DoGetValidator" ref="f1b9f11eab24b1c1331f3f4a663ff98e" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxValidator* wxPGProperty::DoGetValidator           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns pointer to the wxValidator that should be used with the editor of this property (NULL for no validator). 
<p>
Setting validator explicitly via SetPropertyValidator will override this.<p>
In most situations, code like this should work well (macros are used to maintain one actual validator instance, so on the second call the function exits within the first macro):<p>
<div class="fragment"><pre class="fragment">        wxValidator* <a class="code" href="classwxPGProperty.htm#f1b9f11eab24b1c1331f3f4a663ff98e" title="Returns pointer to the wxValidator that should be used with the editor of this property...">wxMyPropertyClass::DoGetValidator</a> ()<span class="keyword"> const</span>
<span class="keyword">        </span>{
            WX_PG_DOGETVALIDATOR_ENTRY()

            wxMyValidator* validator = new wxMyValidator(...);

            ... prepare validator...

            WX_PG_DOGETVALIDATOR_EXIT(validator)
        }
</pre></div><p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>You can get common filename validator by returning wxFileProperty::GetClassValidator(). <a class="el" href="classwxDirProperty.htm" title="Like wxLongStringProperty, but the button triggers dir selector instead.">wxDirProperty</a>, for example, uses it. </dd></dl>

<p>Reimplemented in <a class="el" href="classwxIntProperty.htm#89f118bbe8c81592ab3a48c298282323">wxIntProperty</a>, <a class="el" href="classwxFloatProperty.htm#ce08a385d33d18795d365cfb9ddaccb6">wxFloatProperty</a>, <a class="el" href="classwxFileProperty.htm#f94217ba1252e5072af7a5ff58ab7c90">wxFileProperty</a>, and <a class="el" href="classwxDirProperty.htm#30c166f179ca7069e431d8a9fc115579">wxDirProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="7d355ae4bd55f00bc149e5416c39908c"></a><!-- doxytag: member="wxPGProperty::DoSetAttribute" ref="7d355ae4bd55f00bc149e5416c39908c" args="(const wxString &amp;name, wxVariant &amp;value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPGProperty::DoSetAttribute           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Special handling for attributes of this property. 
<p>
If returns false, then the attribute will be automatically stored in m_attributes.<p>
Default implementation simply returns false. 
<p>Reimplemented in <a class="el" href="classwxSystemColourProperty.htm#e94861630099e15274e7fb73c6acbeec">wxSystemColourProperty</a>, <a class="el" href="classwxDateProperty.htm#8002d8507435979658552562ef88f6b4">wxDateProperty</a>, <a class="el" href="classwxStringProperty.htm#ccdcca7670c75b3c7ce7fd03e3ee1931">wxStringProperty</a>, <a class="el" href="classwxUIntProperty.htm#32d6859622e7818b84018a2487e5d0f9">wxUIntProperty</a>, <a class="el" href="classwxFloatProperty.htm#50ec77824e316afa8f8a2e22515ccc92">wxFloatProperty</a>, <a class="el" href="classwxBoolProperty.htm#95f8acc15ecb026b03f25dd727d09b93">wxBoolProperty</a>, <a class="el" href="classwxFileProperty.htm#2d98e822dacf7e224af8094bb4db44aa">wxFileProperty</a>, <a class="el" href="classwxDirProperty.htm#36bdc92a78d49f504b6fabfd59837043">wxDirProperty</a>, and <a class="el" href="classwxCustomProperty.htm#680f7ef91d3ea6fcbaaced5ad056e92a">wxCustomProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="2993285be09f66ae59cdc2fbffe50296"></a><!-- doxytag: member="wxPGProperty::EnableCommonValue" ref="2993285be09f66ae59cdc2fbffe50296" args="(bool enable=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::EnableCommonValue           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>enable</em> = <code>true</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Call to enable or disable usage of common value (integer value that can be selected for properties instead of their normal values) for this property. 
<p>
Common values are disabled by the default for all properties. 
</div>
</div><p>
<a class="anchor" name="4ab7197c790d560a7515b032d34626bd"></a><!-- doxytag: member="wxPGProperty::GenerateComposedValue" ref="4ab7197c790d560a7515b032d34626bd" args="(wxString &amp;text, int argFlags=0) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::GenerateComposedValue           </td>
          <td>(</td>
          <td class="paramtype">wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argFlags</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Composes text from values of child properties. 
<p>

</div>
</div><p>
<a class="anchor" name="ca7fc7738d8ed57e13e2cee6adc6d7d1"></a><!-- doxytag: member="wxPGProperty::GetAttribute" ref="ca7fc7738d8ed57e13e2cee6adc6d7d1" args="(const wxString &amp;name, const wxString &amp;defVal) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxString wxPGProperty::GetAttribute           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>defVal</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns named attribute, as string, if found. 
<p>
Otherwise defVal is returned. 
</div>
</div><p>
<a class="anchor" name="fb2c6fd9dc99d6a56d45eda1cdc1db79"></a><!-- doxytag: member="wxPGProperty::GetAttributeAsDouble" ref="fb2c6fd9dc99d6a56d45eda1cdc1db79" args="(const wxString &amp;name, double defVal) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double wxPGProperty::GetAttributeAsDouble           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&nbsp;</td>
          <td class="paramname"> <em>defVal</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns named attribute, as double, if found. 
<p>
Otherwise defVal is returned. 
</div>
</div><p>
<a class="anchor" name="5084cee03676645c40dc8c5dcb9ef802"></a><!-- doxytag: member="wxPGProperty::GetAttributeAsLong" ref="5084cee03676645c40dc8c5dcb9ef802" args="(const wxString &amp;name, long defVal) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">long wxPGProperty::GetAttributeAsLong           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">long&nbsp;</td>
          <td class="paramname"> <em>defVal</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns named attribute, as long, if found. 
<p>
Otherwise defVal is returned. 
</div>
</div><p>
<a class="anchor" name="dc211e2a17cfaab3a1c7d4b6fd8788b6"></a><!-- doxytag: member="wxPGProperty::GetBaseName" ref="dc211e2a17cfaab3a1c7d4b6fd8788b6" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const wxString&amp; wxPGProperty::GetBaseName           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns property's base name (ie. 
<p>
parent's name is not added in any case) 
</div>
</div><p>
<a class="anchor" name="182d29e0a63c8f1330314fe105488c20"></a><!-- doxytag: member="wxPGProperty::GetCell" ref="182d29e0a63c8f1330314fe105488c20" args="(unsigned int column) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGCell.htm">wxPGCell</a>* wxPGProperty::GetCell           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>column</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns <a class="el" href="classwxPGCell.htm" title="Base class for simple wxPropertyGrid cell information.">wxPGCell</a> of given column, NULL if none. 
<p>
<a class="el" href="classwxPGProperty.htm" title="wxPGProperty is base class for all wxPropertyGrid properties.">wxPGProperty</a> will retain ownership of the cell object. 
</div>
</div><p>
<a class="anchor" name="200356776151608f0ca63e8cc68fdc8b"></a><!-- doxytag: member="wxPGProperty::GetCellRenderer" ref="200356776151608f0ca63e8cc68fdc8b" args="(int column) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classwxPGCellRenderer.htm">wxPGCellRenderer</a>* wxPGProperty::GetCellRenderer           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>column</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns used <a class="el" href="classwxPGCellRenderer.htm" title="Base class for wxPropertyGrid cell renderers.">wxPGCellRenderer</a> instance for given property column (label=0, value=1). 
<p>
Default implementation returns editor's renderer for all columns. 
</div>
</div><p>
<a class="anchor" name="6aedf98d88f968610f6adef45d391e80"></a><!-- doxytag: member="wxPGProperty::GetChildrenHeight" ref="6aedf98d88f968610f6adef45d391e80" args="(int lh, int iMax=&#45;1) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPGProperty::GetChildrenHeight           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>lh</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>iMax</em> = <code>-1</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns height of children, recursively, and by taking expanded/collapsed status into account. 
<p>
iMax is used when finding property y-positions. 
</div>
</div><p>
<a class="anchor" name="805b98f7d147782079bb9a48915a949f"></a><!-- doxytag: member="wxPGProperty::GetChoiceInfo" ref="805b98f7d147782079bb9a48915a949f" args="(wxPGChoiceInfo *choiceinfo)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual int wxPGProperty::GetChoiceInfo           </td>
          <td>(</td>
          <td class="paramtype">wxPGChoiceInfo *&nbsp;</td>
          <td class="paramname"> <em>choiceinfo</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns current value's index to the choice control. 
<p>
May also return, through pointer arguments, strings that should be inserted to that control. Irrelevant to classes which do not employ wxPG_EDITOR(Choice) or similar. <dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If returns NULL in choices, then this class must be derived from <a class="el" href="classwxBaseEnumProperty.htm" title="Derive dynamic custom properties with choices from this class.">wxBaseEnumProperty</a>.</li><li>Must not crash even if property's set of choices is uninitialized (i.e. it points to wxPGGlobalVars-&gt;m_emptyConstants). </li></ul>
</dd></dl>

<p>Reimplemented in <a class="el" href="classwxMultiChoiceProperty.htm#b4f4610db6f562b4bbafa99fdc0d174d">wxMultiChoiceProperty</a>, <a class="el" href="classwxBoolProperty.htm#5798d776256a543b44adee64304c45b6">wxBoolProperty</a>, <a class="el" href="classwxEnumProperty.htm#f54a110e6df0419802d378f36f23e38d">wxEnumProperty</a>, <a class="el" href="classwxFlagsProperty.htm#9a30ea7560122b1f096e145d34264aea">wxFlagsProperty</a>, and <a class="el" href="classwxCustomProperty.htm#64a86a19a3d57a76684d7b8c7fdd2236">wxCustomProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="7e360285dcfa6fc18c6bc8a88e261baf"></a><!-- doxytag: member="wxPGProperty::GetColumnEditor" ref="7e360285dcfa6fc18c6bc8a88e261baf" args="(int column) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a>* wxPGProperty::GetColumnEditor           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>column</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns editor used for given column. 
<p>
NULL for no editor. 
</div>
</div><p>
<a class="anchor" name="c3cb5123b9964d67d825f224b16d0473"></a><!-- doxytag: member="wxPGProperty::GetCommonValue" ref="c3cb5123b9964d67d825f224b16d0473" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPGProperty::GetCommonValue           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns common value selected for this property. 
<p>
-1 for none. 
</div>
</div><p>
<a class="anchor" name="874654d10c66572f2a4c4c41c843f557"></a><!-- doxytag: member="wxPGProperty::GetEditorDialog" ref="874654d10c66572f2a4c4c41c843f557" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="classwxPGEditorDialogAdapter.htm">wxPGEditorDialogAdapter</a>* wxPGProperty::GetEditorDialog           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns instance of a new <a class="el" href="classwxPGEditorDialogAdapter.htm" title="Derive a class from this to adapt an existing editor dialog or function to be used...">wxPGEditorDialogAdapter</a> instance, which is used when user presses the (optional) button next to the editor control;. 
<p>
Default implementation returns NULL (ie. no action is generated when button is pressed). 
<p>Reimplemented in <a class="el" href="classwxFileProperty.htm#6006eea1f990fc7b1f825a96b2985198">wxFileProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="3ec32fe4fce50790ba93c99b9302dacf"></a><!-- doxytag: member="wxPGProperty::GetFlagsAsString" ref="3ec32fe4fce50790ba93c99b9302dacf" args="(FlagType flagsMask) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxString wxPGProperty::GetFlagsAsString           </td>
          <td>(</td>
          <td class="paramtype">FlagType&nbsp;</td>
          <td class="paramname"> <em>flagsMask</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Gets flags as a'|' delimited string. 
<p>
Note that flag names are not prepended with 'wxPG_PROP_'. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>flagsMask</em>&nbsp;</td><td>String will only be made to include flags combined by this parameter. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="921b49bc576e83b6cb900ade60f3787a"></a><!-- doxytag: member="wxPGProperty::GetGrid" ref="921b49bc576e83b6cb900ade60f3787a" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a>* wxPGProperty::GetGrid           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns property grid where property lies. 
<p>

</div>
</div><p>
<a class="anchor" name="b116666b230d5d98e8fcb7619eea162c"></a><!-- doxytag: member="wxPGProperty::GetGridIfDisplayed" ref="b116666b230d5d98e8fcb7619eea162c" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a>* wxPGProperty::GetGridIfDisplayed           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns owner <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a>, but only if one is currently on a page displaying this property. 
<p>

</div>
</div><p>
<a class="anchor" name="af3cbf9dbc89396c4a00c50da365400f"></a><!-- doxytag: member="wxPGProperty::GetId" ref="af3cbf9dbc89396c4a00c50da365400f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGId</a> wxPGProperty::GetId           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns property id. 
<p>

</div>
</div><p>
<a class="anchor" name="ea61b0869da25fb9eec2648132e4063b"></a><!-- doxytag: member="wxPGProperty::GetImageSize" ref="ea61b0869da25fb9eec2648132e4063b" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxSize wxPGProperty::GetImageSize           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<dl class="deprecated" compact><dt><b><a class="el" href="deprecated.htm#_deprecated000002">Deprecated:</a></b></dt><dd>Since version 1.3. Overriding this will cause run-time assertion failure. </dd></dl>

</div>
</div><p>
<a class="anchor" name="ef71581ec3dcd1e17457457def9f9d24"></a><!-- doxytag: member="wxPGProperty::GetIndexInParent" ref="ef71581ec3dcd1e17457457def9f9d24" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int wxPGProperty::GetIndexInParent           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns position in parent's array. 
<p>

</div>
</div><p>
<a class="anchor" name="7610de7df326219f954133b2460f7bd9"></a><!-- doxytag: member="wxPGProperty::GetLabel" ref="7610de7df326219f954133b2460f7bd9" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const wxString&amp; wxPGProperty::GetLabel           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns property's label. 
<p>

</div>
</div><p>
<a class="anchor" name="50aa7238a183862723e1505d5cffc341"></a><!-- doxytag: member="wxPGProperty::GetMainParent" ref="50aa7238a183862723e1505d5cffc341" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGProperty::GetMainParent           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns highest level non-category, non-root parent. 
<p>
Useful when you have nested wxCustomProperties/wxParentProperties. <dl class="remark" compact><dt><b>Remarks:</b></dt><dd>Thus, if immediate parent is root or category, this will return the property itself. </dd></dl>

</div>
</div><p>
<a class="anchor" name="38b7e68b49282ac71d6e4cea7643aea1"></a><!-- doxytag: member="wxPGProperty::GetName" ref="38b7e68b49282ac71d6e4cea7643aea1" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxString wxPGProperty::GetName           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns property's name with all (non-category, non-root) parents. 
<p>

</div>
</div><p>
<a class="anchor" name="65162fded9ccb4293c2b0fd80fd3b9e1"></a><!-- doxytag: member="wxPGProperty::GetPropertyByNameWH" ref="65162fded9ccb4293c2b0fd80fd3b9e1" args="(const wxString &amp;name, unsigned int hintIndex) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGProperty::GetPropertyByNameWH           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>hintIndex</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const<code> [protected]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns (direct) child property with given name (or NULL if not found), with hint index. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>hintIndex</em>&nbsp;</td><td>Start looking for the child at this index.</td></tr>
  </table>
</dl>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>Does not support scope (ie. Parent.Child notation). </dd></dl>

</div>
</div><p>
<a class="anchor" name="87a8ac6f678f33486b8ae8e6da871e85"></a><!-- doxytag: member="wxPGProperty::GetType" ref="87a8ac6f678f33486b8ae8e6da871e85" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxString wxPGProperty::GetType           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns type name of property that is compatible with CreatePropertyByType. 
<p>
and wxVariant::GetType. 
</div>
</div><p>
<a class="anchor" name="79cb24032f2aaee16a260ca560957a6f"></a><!-- doxytag: member="wxPGProperty::GetValidator" ref="79cb24032f2aaee16a260ca560957a6f" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxValidator* wxPGProperty::GetValidator           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Gets assignable version of property's validator. 
<p>

</div>
</div><p>
<a class="anchor" name="29f70a60e4844efbebc140270e1a4358"></a><!-- doxytag: member="wxPGProperty::GetValueAsString" ref="29f70a60e4844efbebc140270e1a4358" args="(int argFlags=0) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxString wxPGProperty::GetValueAsString           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argFlags</em> = <code>0</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns text representation of property's value. 
<p>
Generally this function should not be called from the application code. Instead, call <a class="el" href="classwxPGProperty.htm#9133d43d6e539e2814ed28d2f37d953e" title="Same as GetValueAsString, except takes common value into account.">GetValueString()</a>.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>argFlags</em>&nbsp;</td><td>If wxPG_FULL_VALUE is set, returns complete, storable string value instead of displayable. If wxPG_EDITABLE_VALUE is set, returns string value that must be editable in textctrl. If wxPG_COMPOSITE_FRAGMENT is set, returns text that is appropriate to display as a part of composite property string value.</td></tr>
  </table>
</dl>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>Default implementation returns string composed from text representations of child properties.</li><li>Implementations are never called with m_value being null variant (ie. unspecified value), so you don't need to check for that. Naturally this means that unspecified value is always displayed as an empty string.</li></ul>
</dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#9133d43d6e539e2814ed28d2f37d953e" title="Same as GetValueAsString, except takes common value into account.">GetValueString()</a> </dd></dl>

<p>Reimplemented in <a class="el" href="classwxFontProperty.htm#12cb68693f41a8211bc3bfb43cb3cbb0">wxFontProperty</a>, <a class="el" href="classwxSystemColourProperty.htm#92e1bbcbd610ee118cb7ca1e4c3bdd83">wxSystemColourProperty</a>, <a class="el" href="classwxMultiChoiceProperty.htm#179e0f6aacf47b87ec30300637ad3604">wxMultiChoiceProperty</a>, <a class="el" href="classwxDateProperty.htm#884baa6bdf985b70bbf55b29d35472f0">wxDateProperty</a>, <a class="el" href="classwxPropertyCategory.htm#1fe8abbb2fcb24c88f787f3aefaa0800">wxPropertyCategory</a>, <a class="el" href="classwxStringProperty.htm#9de83d4f076804a7a53be7cf17f66258">wxStringProperty</a>, <a class="el" href="classwxIntProperty.htm#dfd7996696a4d8f5f9af256fca2a0072">wxIntProperty</a>, <a class="el" href="classwxUIntProperty.htm#e686dcc928cb361adb1b152c57ad3399">wxUIntProperty</a>, <a class="el" href="classwxFloatProperty.htm#c7265c20aa3c333cd9395ab33e034b68">wxFloatProperty</a>, <a class="el" href="classwxBoolProperty.htm#f1f11ce42a5deb61d27a73efe877da3d">wxBoolProperty</a>, <a class="el" href="classwxBaseEnumProperty.htm#a3f4987d0178b9acdcbd9794ff4f3d72">wxBaseEnumProperty</a>, <a class="el" href="classwxFlagsProperty.htm#2bb759850558ea0385079dbb14a06fca">wxFlagsProperty</a>, <a class="el" href="classwxFileProperty.htm#c5d74ec31b9f790d6cc8dcf06f5bd98d">wxFileProperty</a>, <a class="el" href="classwxLongStringProperty.htm#0bbeeb27fcee5441647eb50cc5644cfe">wxLongStringProperty</a>, <a class="el" href="classwxArrayStringProperty.htm#21d793f8342333fde9802d3b719c8def">wxArrayStringProperty</a>, and <a class="el" href="classwxCustomProperty.htm#cfe4b715d33c4108540f61e43528256d">wxCustomProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="a4dc9b698a65205adf6ef4cb165de5ce"></a><!-- doxytag: member="wxPGProperty::GetValueAsVariant" ref="a4dc9b698a65205adf6ef4cb165de5ce" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxVariant wxPGProperty::GetValueAsVariant           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns value as wxVariant. 
<p>
<dl class="deprecated" compact><dt><b><a class="el" href="deprecated.htm#_deprecated000003">Deprecated:</a></b></dt><dd>Since <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> 1.3. Use GetValue() instead. </dd></dl>

</div>
</div><p>
<a class="anchor" name="1a033fa4b022acbd739c2ec5af337a3e"></a><!-- doxytag: member="wxPGProperty::GetValueRef" ref="1a033fa4b022acbd739c2ec5af337a3e" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">wxVariant&amp; wxPGProperty::GetValueRef           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns reference to the internal stored value. 
<p>
GetValue is preferred way to get the actual value, since GetValueRef ignores DoGetValue, which may override stored value. 
</div>
</div><p>
<a class="anchor" name="a36f8e8d6f0e48c9bbb105905220605f"></a><!-- doxytag: member="wxPGProperty::GetY" ref="a36f8e8d6f0e48c9bbb105905220605f" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPGProperty::GetY           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns coordinate to the top y of the property. 
<p>
Note that the position of scrollbars is not taken into account. 
</div>
</div><p>
<a class="anchor" name="d1bd50c81626773176c5d951d0e34c60"></a><!-- doxytag: member="wxPGProperty::Hide" ref="d1bd50c81626773176c5d951d0e34c60" args="(bool hide, int flags=wxPG_RECURSE)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::Hide           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>hide</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>wxPG_RECURSE</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Hides or reveals the property. 
<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>hide</em>&nbsp;</td><td>true for hide, false for reveal. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td>By default changes are applied recursively. Set this paramter wxPG_DONT_RECURSE to prevent this. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="83f63b596fd2a2a677d8096485f0299e"></a><!-- doxytag: member="wxPGProperty::Index" ref="83f63b596fd2a2a677d8096485f0299e" args="(const wxPGProperty *p) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPGProperty::Index           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>p</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns index of given sub-property. 
<p>

</div>
</div><p>
<a class="anchor" name="572697e79fd8785f3477cc7f8d72f5d5"></a><!-- doxytag: member="wxPGProperty::InsertChild" ref="572697e79fd8785f3477cc7f8d72f5d5" args="(int index, wxPGProperty *childProperty)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGProperty::InsertChild           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a> *&nbsp;</td>
          <td class="paramname"> <em>childProperty</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Use this member function to add independent (ie. 
<p>
regular) children to a property.<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>Inserted childProperty.</dd></dl>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> is not automatically refreshed by this function.</dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#0743820583e7066eb726ecbdfc2b2742" title="Appends a new child property.">AppendChild()</a>, <a class="el" href="classwxPGProperty.htm#bec97e799f836560d4f65c7c5fc97f6f" title="Call this to add sub-properties which will become private, fixed children.">AddPrivateChild()</a> </dd></dl>

</div>
</div><p>
<a class="anchor" name="be0d0b4e8b177ef6805c74b5c048f593"></a><!-- doxytag: member="wxPGProperty::InsertChoice" ref="be0d0b4e8b177ef6805c74b5c048f593" args="(const wxString &amp;label, int index, int value=INT_MAX)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int wxPGProperty::InsertChoice           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>label</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>value</em> = <code>INT_MAX</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Adds entry to property's <a class="el" href="classwxPGChoices.htm" title="Helper class for managing choices for properties.">wxPGChoices</a> and editor control (if it is active). 
<p>
Returns index of item added. 
</div>
</div><p>
<a class="anchor" name="d0a8e61a356e1366170967d56af66231"></a><!-- doxytag: member="wxPGProperty::IntToValue" ref="d0a8e61a356e1366170967d56af66231" args="(wxVariant &amp;value, int number, int argFlags=0) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPGProperty::IntToValue           </td>
          <td>(</td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>number</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argFlags</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Converts 'number' (including choice selection) into proper value 'variant'. 
<p>
Returns true if new (different than m_value) value could be interpreted from the integer. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>argFlags</em>&nbsp;</td><td>If wxPG_FULL_VALUE is set, returns complete, storable value instead of displayable</td></tr>
  </table>
</dl>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>Default implementation may work correctly if used value type is int.</li><li>If property is not supposed to use choice or spinctrl or other editor with int-based value, it is not necessary to implement this method.</li><li>If property uses choice control, and displays a dialog on some choice items, then it is preferred to display that dialog in IntToValue instead of OnEvent.</li><li>You might want to take into account that m_value is Null variant if property value is unspecified (which is usually only case if you explicitly enabled that sort behavior). </li></ul>
</dd></dl>

<p>Reimplemented in <a class="el" href="classwxSystemColourProperty.htm#acd92d2ddffdf36c05f6726b749f9e32">wxSystemColourProperty</a>, <a class="el" href="classwxIntProperty.htm#f62719bfea82128eb68ec4506d297de4">wxIntProperty</a>, <a class="el" href="classwxUIntProperty.htm#51ee371e2a3b502db70922be6fc548f3">wxUIntProperty</a>, <a class="el" href="classwxBoolProperty.htm#0adc5b1800f47faf3131974a8f44adf5">wxBoolProperty</a>, <a class="el" href="classwxBaseEnumProperty.htm#6bd6d1bd40730256e42b95d8724e9bc6">wxBaseEnumProperty</a>, and <a class="el" href="classwxCustomProperty.htm#0d314fe9f58e64c3e84114affb56d707">wxCustomProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="ff7d5250185ac44e7a0629d8f7823401"></a><!-- doxytag: member="wxPGProperty::IsSubProperty" ref="ff7d5250185ac44e7a0629d8f7823401" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::IsSubProperty           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns true if this is a sub-property. 
<p>

</div>
</div><p>
<a class="anchor" name="a5a9ebcac6c954178f97a4c100bb3ac0"></a><!-- doxytag: member="wxPGProperty::IsTextEditable" ref="a5a9ebcac6c954178f97a4c100bb3ac0" args="() const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::IsTextEditable           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns true if property has editable wxTextCtrl when selected. 
<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>Altough disabled properties do not displayed editor, they still return True here as being disabled is considered a temporary condition (unlike being read-only or having limited editing enabled). </dd></dl>

</div>
</div><p>
<a class="anchor" name="f2f7f8a157295b8d56138f59573a8254"></a><!-- doxytag: member="wxPGProperty::Item" ref="f2f7f8a157295b8d56138f59573a8254" args="(unsigned int i) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGProperty::Item           </td>
          <td>(</td>
          <td class="paramtype">unsigned int&nbsp;</td>
          <td class="paramname"> <em>i</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns sub-property at index i. 
<p>

</div>
</div><p>
<a class="anchor" name="d0b00df4a3916cb80adfa1227c70baf4"></a><!-- doxytag: member="wxPGProperty::OnCustomPaint" ref="d0b00df4a3916cb80adfa1227c70baf4" args="(wxDC &amp;dc, const wxRect &amp;rect, wxPGPaintData &amp;paintdata)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPGProperty::OnCustomPaint           </td>
          <td>(</td>
          <td class="paramtype">wxDC &amp;&nbsp;</td>
          <td class="paramname"> <em>dc</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxRect &amp;&nbsp;</td>
          <td class="paramname"> <em>rect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structwxPGPaintData.htm">wxPGPaintData</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>paintdata</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Override to paint an image in front of the property value text or drop-down list item (but only if <a class="el" href="classwxPGProperty.htm#8c4008c4d7d148bd06f9db590301df76" title="Returns size of the custom painted image in front of property.">wxPGProperty::OnMeasureImage</a> is overridden as well). 
<p>
If property's <a class="el" href="classwxPGProperty.htm#8c4008c4d7d148bd06f9db590301df76" title="Returns size of the custom painted image in front of property.">OnMeasureImage()</a> returns size that has height != 0 but less than row height ( &lt; 0 has special meanings), <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a> calls this method to draw a custom image in a limited area in front of the editor control or value text/graphics, and if control has drop-down list, then the image is drawn there as well (even in the case <a class="el" href="classwxPGProperty.htm#8c4008c4d7d148bd06f9db590301df76" title="Returns size of the custom painted image in front of property.">OnMeasureImage()</a> returned higher height than row height).<p>
NOTE: Following applies when <a class="el" href="classwxPGProperty.htm#8c4008c4d7d148bd06f9db590301df76" title="Returns size of the custom painted image in front of property.">OnMeasureImage()</a> returns a "flexible" height ( using wxPG_FLEXIBLE_SIZE(W,H) macro), which implies variable height items: If rect.x is &lt; 0, then this is a measure item call, which means that dc is invalid and only thing that should be done is to set paintdata.m_drawnHeight to the height of the image of item at index paintdata.m_choiceItem. This call may be done even as often as once every drop-down popup show.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>dc</em>&nbsp;</td><td>wxDC to paint on. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>rect</em>&nbsp;</td><td>Box reserved for custom graphics. Includes surrounding rectangle, if any. If x is &lt; 0, then this is a measure item call (see above). </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>paintdata</em>&nbsp;</td><td><a class="el" href="structwxPGPaintData.htm" title="Contains information relayed to property&#39;s OnCustomPaint.">wxPGPaintData</a> structure with much useful data.</td></tr>
  </table>
</dl>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>You can actually exceed rect width, but if you do so then paintdata.m_drawnWidth must be set to the full width drawn in pixels.</li><li>Due to technical reasons, rect's height will be default even if custom height was reported during measure call.</li><li>Brush is guaranteed to be default background colour. It has been already used to clear the background of area being painted. It can be modified.</li><li>Pen is guaranteed to be 1-wide 'black' (or whatever is the proper colour) pen for drawing framing rectangle. It can be changed as well. </li></ul>
</dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#29f70a60e4844efbebc140270e1a4358">GetValueAsString</a> </dd></dl>

<p>Reimplemented in <a class="el" href="classwxSystemColourProperty.htm#9951df68b356ad59a51f3cf8910c88fc">wxSystemColourProperty</a>, <a class="el" href="classwxImageFileProperty.htm#fbcc832078fc722b822f9289cd4366ba">wxImageFileProperty</a>, and <a class="el" href="classwxCustomProperty.htm#e1d1b697a65087fabe0607bd03f666fe">wxCustomProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="16fbe26240bf47ab0a9a02d21781da73"></a><!-- doxytag: member="wxPGProperty::OnEvent" ref="16fbe26240bf47ab0a9a02d21781da73" args="(wxPropertyGrid *propgrid, wxWindow *wnd_primary, wxEvent &amp;event)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPGProperty::OnEvent           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td>
          <td class="paramname"> <em>propgrid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxWindow *&nbsp;</td>
          <td class="paramname"> <em>wnd_primary</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxEvent &amp;&nbsp;</td>
          <td class="paramname"> <em>event</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Events received by editor widgets are processed here. 
<p>
Note that editor class usually processes most events. Some, such as button press events of TextCtrlAndButton class, should be handled here. Also, if custom handling for regular events is desired, then that can also be done (for example, <a class="el" href="classwxSystemColourProperty.htm" title="Has dropdown list of wxWidgets system colours.">wxSystemColourProperty</a> custom handles wxEVT_COMMAND_CHOICE_SELECTED).<p>
If the event causes value to be changed, wxPropertyGrid::ValueChangeInEvent(value) should be used.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>event</em>&nbsp;</td><td>Associated wxEvent. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Should</em>&nbsp;</td><td>return true if any changes in value should be reported. </td></tr>
  </table>
</dl>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If property uses choice control, and displays a dialog on some choice items, then it is preferred to display that dialog in IntToValue instead of OnEvent. </li></ul>
</dd></dl>

<p>Reimplemented in <a class="el" href="classwxFontProperty.htm#5ddf12d8d36d5ddcc93136bd7d54eb4a">wxFontProperty</a>, <a class="el" href="classwxSystemColourProperty.htm#b00d87fa2c6dee99480849180b70ab4e">wxSystemColourProperty</a>, <a class="el" href="classwxMultiChoiceProperty.htm#0eea0624bdd670ba7f40db5566d14189">wxMultiChoiceProperty</a>, <a class="el" href="classwxLongStringProperty.htm#943793a4d7dda211d6fc628a7790ccfa">wxLongStringProperty</a>, and <a class="el" href="classwxArrayStringProperty.htm#46bc991a42a2ba02924a355f2b326c2d">wxArrayStringProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="8c4008c4d7d148bd06f9db590301df76"></a><!-- doxytag: member="wxPGProperty::OnMeasureImage" ref="8c4008c4d7d148bd06f9db590301df76" args="(int item=&#45;1) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxSize wxPGProperty::OnMeasureImage           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>item</em> = <code>-1</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns size of the custom painted image in front of property. 
<p>
This method must be overridden to return non-default value if OnCustomPaint is to be called. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>item</em>&nbsp;</td><td>Normally -1, but can be an index to the property's list of items. </td></tr>
  </table>
</dl>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>Default behavior is to return wxSize(0,0), which means no image.</li><li>Default image width or height is indicated with dimension -1.</li><li>You can also return wxPG_DEFAULT_IMAGE_SIZE which equals wxSize(-1, -1). </li></ul>
</dd></dl>

<p>Reimplemented in <a class="el" href="classwxSystemColourProperty.htm#9db3715eaa7e33fad4d901813f7a5d9e">wxSystemColourProperty</a>, <a class="el" href="classwxImageFileProperty.htm#a569befa5e2e6fcb7cbe563ae2a01e53">wxImageFileProperty</a>, and <a class="el" href="classwxCustomProperty.htm#f645d5c89fbdab6ac39ebb1ef701e992">wxCustomProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="e5c4f47d3ff609d19346b994a9a25acb"></a><!-- doxytag: member="wxPGProperty::OnSetValue" ref="e5c4f47d3ff609d19346b994a9a25acb" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPGProperty::OnSetValue           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This virtual function is called after m_value has been set. 
<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If m_value was set to Null variant (ie. unspecified value), <a class="el" href="classwxPGProperty.htm#e5c4f47d3ff609d19346b994a9a25acb" title="This virtual function is called after m_value has been set.">OnSetValue()</a> will not be called.</li><li>m_value may be of any variant type. Typically properties internally support only one variant type, and as such <a class="el" href="classwxPGProperty.htm#e5c4f47d3ff609d19346b994a9a25acb" title="This virtual function is called after m_value has been set.">OnSetValue()</a> provides a good opportunity to convert supported values into internal type.</li><li>Default implementation does nothing. </li></ul>
</dd></dl>

<p>Reimplemented in <a class="el" href="classwxFontProperty.htm#516710e50832b0f095e9b47b348a42b9">wxFontProperty</a>, <a class="el" href="classwxSystemColourProperty.htm#b5a97bd1acae0a58fa96f8282d89b4e9">wxSystemColourProperty</a>, <a class="el" href="classwxImageFileProperty.htm#42428291b8abba3e237d05f57c351ae5">wxImageFileProperty</a>, <a class="el" href="classwxMultiChoiceProperty.htm#2acec8bd37d560fa775827a1b9d3a16f">wxMultiChoiceProperty</a>, <a class="el" href="classwxDateProperty.htm#41352b386ea75996caec85a48bc1cfca">wxDateProperty</a>, <a class="el" href="classwxStringProperty.htm#6321678d7169ded02f449c5f56d281e0">wxStringProperty</a>, <a class="el" href="classwxBaseEnumProperty.htm#04c13f797615778c3359e81c8155200c">wxBaseEnumProperty</a>, <a class="el" href="classwxFlagsProperty.htm#e3b98011acae0b0117a4fedd836af664">wxFlagsProperty</a>, <a class="el" href="classwxFileProperty.htm#7fa1939a2201238c3acf57620b28bb35">wxFileProperty</a>, and <a class="el" href="classwxArrayStringProperty.htm#bd5869793f9a696ef216fd8d94b5afce">wxArrayStringProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="cbffb1a7f8dee530918ff74c5cb70363"></a><!-- doxytag: member="wxPGProperty::OnValidationFailure" ref="cbffb1a7f8dee530918ff74c5cb70363" args="(wxVariant &amp;pendingValue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPGProperty::OnValidationFailure           </td>
          <td>(</td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>pendingValue</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Called whenever validation has failed with given pending value. 
<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>If you implement this in your custom property class, please remember to call the baser implementation as well as they may use it to revert property into pre-change state. </dd></dl>

<p>Reimplemented in <a class="el" href="classwxBaseEnumProperty.htm#16b54370a862e434f7061d26cde8b305">wxBaseEnumProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="d7221ec4c516aef1a5245f762402b9be"></a><!-- doxytag: member="wxPGProperty::PrepareValueForDialogEditing" ref="d7221ec4c516aef1a5245f762402b9be" args="(wxPropertyGrid *propgrid)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::PrepareValueForDialogEditing           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td>
          <td class="paramname"> <em>propgrid</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Updates property value in case there were last minute changes. 
<p>
If value was unspecified, it will be set to default. Use only for properties that have TextCtrl-based editor. <dl class="remark" compact><dt><b>Remarks:</b></dt><dd>If you have code similar to <div class="fragment"><pre class="fragment">            <span class="comment">// Update the value in case of last minute changes</span>
            <span class="keywordflow">if</span> ( primary &amp;&amp; propgrid-&gt;IsEditorsValueModified() )
                 GetEditorClass()-&gt;CopyValueFromControl( <span class="keyword">this</span>, primary );
</pre></div> in <a class="el" href="classwxPGProperty.htm#16fbe26240bf47ab0a9a02d21781da73" title="Events received by editor widgets are processed here.">wxPGProperty::OnEvent</a> wxEVT_COMMAND_BUTTON_CLICKED handler, then replace it with call to this method. </dd></dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>True</em>&nbsp;</td><td>if value changed. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="905f5ca0479004626e7670dbbebf8368"></a><!-- doxytag: member="wxPGProperty::RecreateEditor" ref="905f5ca0479004626e7670dbbebf8368" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::RecreateEditor           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
If property's editor is created this forces its recreation. 
<p>
Useful in SetAttribute etc. Returns true if actually did anything. 
</div>
</div><p>
<a class="anchor" name="167afcb85ed4d527e34567e32a0cc714"></a><!-- doxytag: member="wxPGProperty::RefreshChildren" ref="167afcb85ed4d527e34567e32a0cc714" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxPGProperty::RefreshChildren           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Refresh values of child properties. 
<p>
Automatically called after value is set. 
<p>Reimplemented in <a class="el" href="classwxFontProperty.htm#a04df1eabbaedfefca3f9b1ab1626955">wxFontProperty</a>, and <a class="el" href="classwxFlagsProperty.htm#c818a4f52f5df809d22a2e213b497215">wxFlagsProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="418c1539969b7a0a9378a3411a5680a6"></a><!-- doxytag: member="wxPGProperty::SetAttribute" ref="418c1539969b7a0a9378a3411a5680a6" args="(const wxString &amp;name, wxVariant value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetAttribute           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant&nbsp;</td>
          <td class="paramname"> <em>value</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets an attribute for this property. 
<p>
There are both common attributes and property class specific ones. For list of common attributes, see <a class="el" href="classwxPropertyGridInterface.htm#129a37f9d87a2a08516772de9860432d" title="Sets an attribute of a property.">wxPropertyGridInterface::SetPropertyAttribute()</a>.<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>Settings attribute's value to Null variant will simply remove it from property's set of attributes. </dd></dl>

</div>
</div><p>
<a class="anchor" name="9ff7ee5a218d9e1f9a3d44c8246e4d5e"></a><!-- doxytag: member="wxPGProperty::SetCell" ref="9ff7ee5a218d9e1f9a3d44c8246e4d5e" args="(int column, wxPGCell *cellObj)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetCell           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>column</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classwxPGCell.htm">wxPGCell</a> *&nbsp;</td>
          <td class="paramname"> <em>cellObj</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets cell information for given column. 
<p>
Note that the property takes ownership of given <a class="el" href="classwxPGCell.htm" title="Base class for simple wxPropertyGrid cell information.">wxPGCell</a> instance. 
</div>
</div><p>
<a class="anchor" name="7275467270d2c7ac3f847f4d1b6a1194"></a><!-- doxytag: member="wxPGProperty::SetChoices" ref="7275467270d2c7ac3f847f4d1b6a1194" args="(wxPGChoices &amp;choices)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool wxPGProperty::SetChoices           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>choices</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets new set of choices for property. 
<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>This operation clears the property value. </dd></dl>

</div>
</div><p>
<a class="anchor" name="613b4866a6b2281bf0382b0d883feb86"></a><!-- doxytag: member="wxPGProperty::SetChoiceSelection" ref="613b4866a6b2281bf0382b0d883feb86" args="(int newValue, const wxPGChoiceInfo &amp;choiceInfo)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetChoiceSelection           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>newValue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxPGChoiceInfo &amp;&nbsp;</td>
          <td class="paramname"> <em>choiceInfo</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Changes value of a property with choices, but only works if the value type is long or string. 
<p>

</div>
</div><p>
<a class="anchor" name="5102b203f2839cd2f2d0d5d1a2f2de83"></a><!-- doxytag: member="wxPGProperty::SetClientData" ref="5102b203f2839cd2f2d0d5d1a2f2de83" args="(ClientDataType clientData)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetClientData           </td>
          <td>(</td>
          <td class="paramtype">ClientDataType&nbsp;</td>
          <td class="paramname"> <em>clientData</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets client data (void*) of a property. 
<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>This untyped client data has to be deleted manually. </dd></dl>

</div>
</div><p>
<a class="anchor" name="588ce65663bca1c5cff81cd838a0c97a"></a><!-- doxytag: member="wxPGProperty::SetCommonValue" ref="588ce65663bca1c5cff81cd838a0c97a" args="(int commonValue)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetCommonValue           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>commonValue</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets common value selected for this property. 
<p>
-1 for none. 
</div>
</div><p>
<a class="anchor" name="7722a2c503051fd6ef1477a9c0c081a4"></a><!-- doxytag: member="wxPGProperty::SetDefaultValue" ref="7722a2c503051fd6ef1477a9c0c081a4" args="(wxVariant &amp;value)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetDefaultValue           </td>
          <td>(</td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>value</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set default value of a property. 
<p>
Synonymous to<p>
<div class="fragment"><pre class="fragment">            <a class="code" href="classwxPGProperty.htm#418c1539969b7a0a9378a3411a5680a6" title="Sets an attribute for this property.">SetAttribute</a>(wxT(<span class="stringliteral">"DefaultValue"</span>), value);
</pre></div> 
</div>
</div><p>
<a class="anchor" name="90294ea6cae6cf504d032b46787bb6e4"></a><!-- doxytag: member="wxPGProperty::SetEditor" ref="90294ea6cae6cf504d032b46787bb6e4" args="(const wxString &amp;editorName)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetEditor           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>editorName</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets editor for a property. 
<p>

</div>
</div><p>
<a class="anchor" name="2cd2e6f0b30a1ab789f9ea8b58226260"></a><!-- doxytag: member="wxPGProperty::SetEditor" ref="2cd2e6f0b30a1ab789f9ea8b58226260" args="(const wxPGEditor *editor)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetEditor           </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classwxPGEditor.htm">wxPGEditor</a> *&nbsp;</td>
          <td class="paramname"> <em>editor</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets editor for a property. 
<p>

</div>
</div><p>
<a class="anchor" name="a0b458523923d5c753d07f59f382931e"></a><!-- doxytag: member="wxPGProperty::SetFlagsFromString" ref="a0b458523923d5c753d07f59f382931e" args="(const wxString &amp;str)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetFlagsFromString           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>str</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets flags from a '|' delimited string. 
<p>
Note that flag names are not prepended with 'wxPG_PROP_'. 
</div>
</div><p>
<a class="anchor" name="5acdc1db23a6e219de6619bc54e1a2e3"></a><!-- doxytag: member="wxPGProperty::SetLabel" ref="5acdc1db23a6e219de6619bc54e1a2e3" args="(const wxString &amp;label)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetLabel           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>label</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Sets property's label. 
<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>Properties under same parent may have same labels. However, property names must still remain unique. </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="a8e771a01a93fe94f87a449f430afa79"></a><!-- doxytag: member="wxPGProperty::SetValue" ref="a8e771a01a93fe94f87a449f430afa79" args="(wxVariant value, wxVariant *pList=NULL, int flags=wxPG_SETVAL_REFRESH_EDITOR)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetValue           </td>
          <td>(</td>
          <td class="paramtype">wxVariant&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxVariant *&nbsp;</td>
          <td class="paramname"> <em>pList</em> = <code>NULL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>wxPG_SETVAL_REFRESH_EDITOR</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Call this to set value of the property. 
<p>
Unlike methods in <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a>, this does not automatically update the display.<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>Use <a class="el" href="classwxPropertyGrid.htm#6958b5c1a1f71512afaf6f2c07c1becd" title="Changes value of a property, as if from an editor.">wxPropertyGrid::ChangePropertyValue()</a> instead if you need to run through validation process and send property change event.</dd></dl>
If you need to change property value in event, based on user input, use <a class="el" href="classwxPGProperty.htm#de9385b0bc3c9ba4833b271157e87354" title="Call in OnEvent(), OnButtonClick() etc.">SetValueInEvent()</a> instead.<p>
(only if wxPG_PROP_AGGREGATE flag is set). <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>pList</em>&nbsp;</td><td>Pointer to list variant that contains child values. Used to indicate which children should be marked as modified. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td>Various flags (for instance, wxPG_SETVAL_REFRESH_EDITOR), which is on by default. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="ed06089224f01494563f2192809e5706"></a><!-- doxytag: member="wxPGProperty::SetValueFromInt" ref="ed06089224f01494563f2192809e5706" args="(long value, int flags=0)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPGProperty::SetValueFromInt           </td>
          <td>(</td>
          <td class="paramtype">long&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Converts integer to a value, and if succesfull, calls <a class="el" href="classwxPGProperty.htm#a8e771a01a93fe94f87a449f430afa79" title="Call this to set value of the property.">SetValue()</a> on it. 
<p>
Default behavior is to do nothing. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>value</em>&nbsp;</td><td>Int to get the value from. </td></tr>
    <tr><td valign="top"></td><td valign="top"><em>flags</em>&nbsp;</td><td>If has wxPG_FULL_VALUE, then the value given is a actual value and not an index. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>true</em>&nbsp;</td><td>if value was changed. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="55f438205fd7684d76a9435cbaec6aa5"></a><!-- doxytag: member="wxPGProperty::SetValueFromString" ref="55f438205fd7684d76a9435cbaec6aa5" args="(const wxString &amp;text, int flags=wxPG_PROGRAMMATIC_VALUE)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPGProperty::SetValueFromString           </td>
          <td>(</td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>flags</em> = <code>wxPG_PROGRAMMATIC_VALUE</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Converts string to a value, and if succesfull, calls <a class="el" href="classwxPGProperty.htm#a8e771a01a93fe94f87a449f430afa79" title="Call this to set value of the property.">SetValue()</a> on it. 
<p>
Default behavior is to do nothing. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>text</em>&nbsp;</td><td>String to get the value from. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>true</em>&nbsp;</td><td>if value was changed. </td></tr>
  </table>
</dl>

</div>
</div><p>
<a class="anchor" name="5c5be1292d329945b0a24e33db485207"></a><!-- doxytag: member="wxPGProperty::SetValueImage" ref="5c5be1292d329945b0a24e33db485207" args="(wxBitmap &amp;bmp)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetValueImage           </td>
          <td>(</td>
          <td class="paramtype">wxBitmap &amp;&nbsp;</td>
          <td class="paramname"> <em>bmp</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set wxBitmap in front of the value. 
<p>
This bitmap may be ignored by custom cell renderers. 
</div>
</div><p>
<a class="anchor" name="de9385b0bc3c9ba4833b271157e87354"></a><!-- doxytag: member="wxPGProperty::SetValueInEvent" ref="de9385b0bc3c9ba4833b271157e87354" args="(wxVariant value) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetValueInEvent           </td>
          <td>(</td>
          <td class="paramtype">wxVariant&nbsp;</td>
          <td class="paramname"> <em>value</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Call in <a class="el" href="classwxPGProperty.htm#16fbe26240bf47ab0a9a02d21781da73" title="Events received by editor widgets are processed here.">OnEvent()</a>, OnButtonClick() etc. 
<p>
to change the property value based on user input.<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd>This method is const since it doesn't actually modify value, but posts given variant as pending value, stored in <a class="el" href="classwxPropertyGrid.htm" title="wxPropertyGrid is a specialized two-column grid for editing properties such as strings...">wxPropertyGrid</a>. </dd></dl>

</div>
</div><p>
<a class="anchor" name="46da7a139ba90c3852710f181280667d"></a><!-- doxytag: member="wxPGProperty::SetWasModified" ref="46da7a139ba90c3852710f181280667d" args="(bool set=true)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void wxPGProperty::SetWasModified           </td>
          <td>(</td>
          <td class="paramtype">bool&nbsp;</td>
          <td class="paramname"> <em>set</em> = <code>true</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Call with 'false' in OnSetValue to cancel value changes after all (ie. 
<p>
cancel 'true' returned by <a class="el" href="classwxPGProperty.htm#974a9b01c1f88cf4db630b6895453db8" title="Converts &#39;text&#39; into proper value &#39;variant&#39;.">StringToValue()</a> or <a class="el" href="classwxPGProperty.htm#d0a8e61a356e1366170967d56af66231" title="Converts &#39;number&#39; (including choice selection) into proper value &#39;variant&#39;...">IntToValue()</a>). 
</div>
</div><p>
<a class="anchor" name="974a9b01c1f88cf4db630b6895453db8"></a><!-- doxytag: member="wxPGProperty::StringToValue" ref="974a9b01c1f88cf4db630b6895453db8" args="(wxVariant &amp;variant, const wxString &amp;text, int argFlags=0) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPGProperty::StringToValue           </td>
          <td>(</td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>variant</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argFlags</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Converts 'text' into proper value 'variant'. 
<p>
Returns true if new (different than m_value) value could be interpreted from the text. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>argFlags</em>&nbsp;</td><td>If wxPG_FULL_VALUE is set, returns complete, storable value instead of displayable one (they may be different). If wxPG_COMPOSITE_FRAGMENT is set, text is interpreted as a part of composite property string value (as generated by <a class="el" href="classwxPGProperty.htm#29f70a60e4844efbebc140270e1a4358" title="Returns text representation of property&#39;s value.">GetValueAsString()</a> called with this same flag).</td></tr>
  </table>
</dl>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>Default implementation converts semicolon delimited tokens into child values. Only works for properties with children.</li><li>You might want to take into account that m_value is Null variant if property value is unspecified (which is usually only case if you explicitly enabled that sort behavior). </li></ul>
</dd></dl>

<p>Reimplemented in <a class="el" href="classwxSystemColourProperty.htm#c32c042d219650b6f720ac30dba21d7d">wxSystemColourProperty</a>, <a class="el" href="classwxMultiChoiceProperty.htm#7a51665573b0d677d85798e6bdf79feb">wxMultiChoiceProperty</a>, <a class="el" href="classwxDateProperty.htm#2b1646bc5d256760d5f0f6082fc26421">wxDateProperty</a>, <a class="el" href="classwxPGRootProperty.htm#081d6efdf14674b00a83a9e6aa397cdc">wxPGRootProperty</a>, <a class="el" href="classwxStringProperty.htm#ad4dc3751020f93706d8325f27b1cc88">wxStringProperty</a>, <a class="el" href="classwxIntProperty.htm#6f48ee28fc4a269a8f6c174cf97e7d60">wxIntProperty</a>, <a class="el" href="classwxUIntProperty.htm#451ac50bd1a1ee1286aa03dc00838b51">wxUIntProperty</a>, <a class="el" href="classwxFloatProperty.htm#0878bb8820e7443ae70445c959f56a85">wxFloatProperty</a>, <a class="el" href="classwxBoolProperty.htm#b17559d6a5a368f09eec32ced97f98e1">wxBoolProperty</a>, <a class="el" href="classwxBaseEnumProperty.htm#e66f1522fd28f71a079b1d79bdfc4fd3">wxBaseEnumProperty</a>, <a class="el" href="classwxFlagsProperty.htm#249ef74160eb1b0688e33a0e9faffd98">wxFlagsProperty</a>, <a class="el" href="classwxFileProperty.htm#5caeb2678cbce00494e30329bf7e16b6">wxFileProperty</a>, <a class="el" href="classwxLongStringProperty.htm#be2b2e98457e5cdf7cf8b87094eb9596">wxLongStringProperty</a>, <a class="el" href="classwxArrayStringProperty.htm#6cbd848bfcdd3f7cd2131a24e86660c5">wxArrayStringProperty</a>, and <a class="el" href="classwxCustomProperty.htm#1e7ad5e3a61dfb4a8671b68b32f7292c">wxCustomProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="7b2f517388b0f0038354d5fd9f0bab43"></a><!-- doxytag: member="wxPGProperty::UpdateParentValues" ref="7b2f517388b0f0038354d5fd9f0bab43" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classwxPGProperty.htm">wxPGProperty</a>* wxPGProperty::UpdateParentValues           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Updates composed values of parent non-category properties, recursively. 
<p>
Returns topmost property updated.<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>Must not call <a class="el" href="classwxPGProperty.htm#a8e771a01a93fe94f87a449f430afa79" title="Call this to set value of the property.">SetValue()</a> (as can be called in it). </li></ul>
</dd></dl>

</div>
</div><p>
<a class="anchor" name="2e0c041aa3e19a5934a02c65b53f9f7d"></a><!-- doxytag: member="wxPGProperty::ValidateValue" ref="2e0c041aa3e19a5934a02c65b53f9f7d" args="(wxVariant &amp;value, wxPGValidationInfo &amp;validationInfo) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxPGProperty::ValidateValue           </td>
          <td>(</td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structwxPGValidationInfo.htm">wxPGValidationInfo</a> &amp;&nbsp;</td>
          <td class="paramname"> <em>validationInfo</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Implement this function in derived class to check the value. 
<p>
Return true if it is ok. Returning false prevents property change events from occurring.<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>Default implementation always returns true. </li></ul>
</dd></dl>

<p>Reimplemented in <a class="el" href="classwxIntProperty.htm#642930118b1851d28c4e80dd07dc6548">wxIntProperty</a>, <a class="el" href="classwxUIntProperty.htm#5d3cd6758d91946b766f40d23cf3659c">wxUIntProperty</a>, <a class="el" href="classwxFloatProperty.htm#c1efa28c80ba221e81d0b4fb665e9470">wxFloatProperty</a>, and <a class="el" href="classwxBaseEnumProperty.htm#33f0cbad91d333c74064e5206cfbf8cc">wxBaseEnumProperty</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>propgrid.h</ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Sun Jul 12 13:11:22 2009 for wxPropertyGrid by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.9 </small></address>
</body>
</html>
