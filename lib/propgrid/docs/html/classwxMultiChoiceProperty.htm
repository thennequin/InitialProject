<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>wxPropertyGrid: wxMultiChoiceProperty Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.9 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.htm"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.htm"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.htm"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.htm"><span>Classes</span></a></li>
    <li>
      <form action="search.php" method="get">
        <table cellspacing="0" cellpadding="0" border="0">
          <tr>
            <td><label>&nbsp;<u>S</u>earch&nbsp;for&nbsp;</label></td>
            <td><input type="text" name="query" value="" size="20" accesskey="s"/></td>
          </tr>
        </table>
      </form>
    </li>
    </ul>
  </div>
  <div class="tabs">
    <ul>
      <li><a href="annotated.htm"><span>Class&nbsp;List</span></a></li>
      <li><a href="classes.htm"><span>Class&nbsp;Index</span></a></li>
      <li><a href="hierarchy.htm"><span>Class&nbsp;Hierarchy</span></a></li>
      <li><a href="functions.htm"><span>Class&nbsp;Members</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>wxMultiChoiceProperty Class Reference</h1><!-- doxytag: class="wxMultiChoiceProperty" --><!-- doxytag: inherits="wxPGProperty" -->Property that manages a value resulting from wxMultiChoiceDialog.  
<a href="#_details">More...</a>
<p>
<code>#include &lt;advprops.h&gt;</code>
<p>
<div class="dynheader">
Inheritance diagram for wxMultiChoiceProperty:</div>
<div class="dynsection">

<p><center><img src="classwxMultiChoiceProperty.png" usemap="#wxMultiChoiceProperty_map" border="0" alt=""></center>
<map name="wxMultiChoiceProperty_map">
<area href="classwxPGProperty.htm" alt="wxPGProperty" shape="rect" coords="0,0,143,24">
</map>
</div>

<p>
<a href="classwxMultiChoiceProperty-members.htm">List of all members.</a><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Public Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxMultiChoiceProperty.htm#b4f4610db6f562b4bbafa99fdc0d174d">GetChoiceInfo</a> (wxPGChoiceInfo *choiceinfo)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns current value's index to the choice control.  <a href="#b4f4610db6f562b4bbafa99fdc0d174d"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="2f0cd8d0e69677cc29119a6b5f8bf107"></a><!-- doxytag: member="wxMultiChoiceProperty::GetValueAsArrayInt" ref="2f0cd8d0e69677cc29119a6b5f8bf107" args="() const " -->
wxArrayInt&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetValueAsArrayInt</b> () const </td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual wxString&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxMultiChoiceProperty.htm#179e0f6aacf47b87ec30300637ad3604">GetValueAsString</a> (int flags=0) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Returns text representation of property's value.  <a href="#179e0f6aacf47b87ec30300637ad3604"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxMultiChoiceProperty.htm#0eea0624bdd670ba7f40db5566d14189">OnEvent</a> (<a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *propgrid, wxWindow *primary, wxEvent &amp;event)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Events received by editor widgets are processed here.  <a href="#0eea0624bdd670ba7f40db5566d14189"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxMultiChoiceProperty.htm#2acec8bd37d560fa775827a1b9d3a16f">OnSetValue</a> ()</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">This virtual function is called after m_value has been set.  <a href="#2acec8bd37d560fa775827a1b9d3a16f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">virtual bool&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="classwxMultiChoiceProperty.htm#7a51665573b0d677d85798e6bdf79feb">StringToValue</a> (wxVariant &amp;variant, const wxString &amp;text, int argFlags=0) const </td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Converts 'text' into proper value 'variant'.  <a href="#7a51665573b0d677d85798e6bdf79feb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="312dd6bd1d1a1512e68d5387452365cb"></a><!-- doxytag: member="wxMultiChoiceProperty::wxMultiChoiceProperty" ref="312dd6bd1d1a1512e68d5387452365cb" args="(const wxString &amp;label=wxPG_LABEL, const wxString &amp;name=wxPG_LABEL, const wxArrayString &amp;value=wxArrayString())" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><b>wxMultiChoiceProperty</b> (const wxString &amp;label=wxPG_LABEL, const wxString &amp;name=wxPG_LABEL, const wxArrayString &amp;value=wxArrayString())</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="6af59781d2ad7c0634a96c56109ccd23"></a><!-- doxytag: member="wxMultiChoiceProperty::wxMultiChoiceProperty" ref="6af59781d2ad7c0634a96c56109ccd23" args="(const wxString &amp;label, const wxString &amp;name, const wxPGChoices &amp;choices, const wxArrayString &amp;value=wxArrayString())" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><b>wxMultiChoiceProperty</b> (const wxString &amp;label, const wxString &amp;name, const <a class="el" href="classwxPGChoices.htm">wxPGChoices</a> &amp;choices, const wxArrayString &amp;value=wxArrayString())</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="63bdf10faa673fdee24fff40fc1cb233"></a><!-- doxytag: member="wxMultiChoiceProperty::wxMultiChoiceProperty" ref="63bdf10faa673fdee24fff40fc1cb233" args="(const wxString &amp;label, const wxString &amp;name, const wxArrayString &amp;strings, const wxArrayString &amp;value)" -->
&nbsp;</td><td class="memItemRight" valign="bottom"><b>wxMultiChoiceProperty</b> (const wxString &amp;label, const wxString &amp;name, const wxArrayString &amp;strings, const wxArrayString &amp;value)</td></tr>

<tr><td colspan="2"><br><h2>Protected Member Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="ffd221ee1f6ebb7598092df2a37427d7"></a><!-- doxytag: member="wxMultiChoiceProperty::GenerateValueAsString" ref="ffd221ee1f6ebb7598092df2a37427d7" args="()" -->
void&nbsp;</td><td class="memItemRight" valign="bottom"><b>GenerateValueAsString</b> ()</td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="90da2ed48b1845dd2546fa07c7155077"></a><!-- doxytag: member="wxMultiChoiceProperty::GetValueAsIndices" ref="90da2ed48b1845dd2546fa07c7155077" args="() const " -->
wxArrayInt&nbsp;</td><td class="memItemRight" valign="bottom"><b>GetValueAsIndices</b> () const </td></tr>

<tr><td colspan="2"><br><h2>Protected Attributes</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="3f6785d9492d44acc4fee175be730f3b"></a><!-- doxytag: member="wxMultiChoiceProperty::m_choices" ref="3f6785d9492d44acc4fee175be730f3b" args="" -->
<a class="el" href="classwxPGChoices.htm">wxPGChoices</a>&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_choices</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="e420cfca72141617cbb88d4e21abb15b"></a><!-- doxytag: member="wxMultiChoiceProperty::m_display" ref="e420cfca72141617cbb88d4e21abb15b" args="" -->
wxString&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_display</b></td></tr>

<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="anchor" name="42408c2ad50ce04bee71deca11dead53"></a><!-- doxytag: member="wxMultiChoiceProperty::m_valueAsStrings" ref="42408c2ad50ce04bee71deca11dead53" args="" -->
wxArrayString&nbsp;</td><td class="memItemRight" valign="bottom"><b>m_valueAsStrings</b></td></tr>

</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
Property that manages a value resulting from wxMultiChoiceDialog. 
<p>
Value is array of strings. You can get value as array of choice values/indices by calling wxMultiChoiceProperty::GetValueAsArrayInt().<p>
<b>Supported special attributes:</b><ul>
<li>"UserStringMode": If &gt; 0, allow user to manually enter strings that are not in the list of choices. If this value is 1, user strings are preferably placed in front of valid choices. If value is 2, then those strings will placed behind valid choices. </li></ul>
<hr><h2>Member Function Documentation</h2>
<a class="anchor" name="b4f4610db6f562b4bbafa99fdc0d174d"></a><!-- doxytag: member="wxMultiChoiceProperty::GetChoiceInfo" ref="b4f4610db6f562b4bbafa99fdc0d174d" args="(wxPGChoiceInfo *choiceinfo)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual int wxMultiChoiceProperty::GetChoiceInfo           </td>
          <td>(</td>
          <td class="paramtype">wxPGChoiceInfo *&nbsp;</td>
          <td class="paramname"> <em>choiceinfo</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns current value's index to the choice control. 
<p>
May also return, through pointer arguments, strings that should be inserted to that control. Irrelevant to classes which do not employ wxPG_EDITOR(Choice) or similar. <dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If returns NULL in choices, then this class must be derived from <a class="el" href="classwxBaseEnumProperty.htm" title="Derive dynamic custom properties with choices from this class.">wxBaseEnumProperty</a>.</li><li>Must not crash even if property's set of choices is uninitialized (i.e. it points to wxPGGlobalVars-&gt;m_emptyConstants). </li></ul>
</dd></dl>

<p>Reimplemented from <a class="el" href="classwxPGProperty.htm#805b98f7d147782079bb9a48915a949f">wxPGProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="179e0f6aacf47b87ec30300637ad3604"></a><!-- doxytag: member="wxMultiChoiceProperty::GetValueAsString" ref="179e0f6aacf47b87ec30300637ad3604" args="(int flags=0) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual wxString wxMultiChoiceProperty::GetValueAsString           </td>
          <td>(</td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argFlags</em> = <code>0</code>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Returns text representation of property's value. 
<p>
Generally this function should not be called from the application code. Instead, call <a class="el" href="classwxPGProperty.htm#9133d43d6e539e2814ed28d2f37d953e" title="Same as GetValueAsString, except takes common value into account.">GetValueString()</a>.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>argFlags</em>&nbsp;</td><td>If wxPG_FULL_VALUE is set, returns complete, storable string value instead of displayable. If wxPG_EDITABLE_VALUE is set, returns string value that must be editable in textctrl. If wxPG_COMPOSITE_FRAGMENT is set, returns text that is appropriate to display as a part of composite property string value.</td></tr>
  </table>
</dl>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>Default implementation returns string composed from text representations of child properties.</li><li>Implementations are never called with m_value being null variant (ie. unspecified value), so you don't need to check for that. Naturally this means that unspecified value is always displayed as an empty string.</li></ul>
</dd></dl>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="classwxPGProperty.htm#9133d43d6e539e2814ed28d2f37d953e" title="Same as GetValueAsString, except takes common value into account.">GetValueString()</a> </dd></dl>

<p>Reimplemented from <a class="el" href="classwxPGProperty.htm#29f70a60e4844efbebc140270e1a4358">wxPGProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="0eea0624bdd670ba7f40db5566d14189"></a><!-- doxytag: member="wxMultiChoiceProperty::OnEvent" ref="0eea0624bdd670ba7f40db5566d14189" args="(wxPropertyGrid *propgrid, wxWindow *primary, wxEvent &amp;event)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxMultiChoiceProperty::OnEvent           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classwxPropertyGrid.htm">wxPropertyGrid</a> *&nbsp;</td>
          <td class="paramname"> <em>propgrid</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxWindow *&nbsp;</td>
          <td class="paramname"> <em>wnd_primary</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">wxEvent &amp;&nbsp;</td>
          <td class="paramname"> <em>event</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Events received by editor widgets are processed here. 
<p>
Note that editor class usually processes most events. Some, such as button press events of TextCtrlAndButton class, should be handled here. Also, if custom handling for regular events is desired, then that can also be done (for example, <a class="el" href="classwxSystemColourProperty.htm" title="Has dropdown list of wxWidgets system colours.">wxSystemColourProperty</a> custom handles wxEVT_COMMAND_CHOICE_SELECTED).<p>
If the event causes value to be changed, wxPropertyGrid::ValueChangeInEvent(value) should be used.<p>
<dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>event</em>&nbsp;</td><td>Associated wxEvent. </td></tr>
  </table>
</dl>
<dl compact><dt><b>Return values:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>Should</em>&nbsp;</td><td>return true if any changes in value should be reported. </td></tr>
  </table>
</dl>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If property uses choice control, and displays a dialog on some choice items, then it is preferred to display that dialog in IntToValue instead of OnEvent. </li></ul>
</dd></dl>

<p>Reimplemented from <a class="el" href="classwxPGProperty.htm#16fbe26240bf47ab0a9a02d21781da73">wxPGProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="2acec8bd37d560fa775827a1b9d3a16f"></a><!-- doxytag: member="wxMultiChoiceProperty::OnSetValue" ref="2acec8bd37d560fa775827a1b9d3a16f" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual void wxMultiChoiceProperty::OnSetValue           </td>
          <td>(</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td><code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
This virtual function is called after m_value has been set. 
<p>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>If m_value was set to Null variant (ie. unspecified value), <a class="el" href="classwxMultiChoiceProperty.htm#2acec8bd37d560fa775827a1b9d3a16f" title="This virtual function is called after m_value has been set.">OnSetValue()</a> will not be called.</li><li>m_value may be of any variant type. Typically properties internally support only one variant type, and as such <a class="el" href="classwxMultiChoiceProperty.htm#2acec8bd37d560fa775827a1b9d3a16f" title="This virtual function is called after m_value has been set.">OnSetValue()</a> provides a good opportunity to convert supported values into internal type.</li><li>Default implementation does nothing. </li></ul>
</dd></dl>

<p>Reimplemented from <a class="el" href="classwxPGProperty.htm#e5c4f47d3ff609d19346b994a9a25acb">wxPGProperty</a>.</p>

</div>
</div><p>
<a class="anchor" name="7a51665573b0d677d85798e6bdf79feb"></a><!-- doxytag: member="wxMultiChoiceProperty::StringToValue" ref="7a51665573b0d677d85798e6bdf79feb" args="(wxVariant &amp;variant, const wxString &amp;text, int argFlags=0) const " -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool wxMultiChoiceProperty::StringToValue           </td>
          <td>(</td>
          <td class="paramtype">wxVariant &amp;&nbsp;</td>
          <td class="paramname"> <em>variant</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const wxString &amp;&nbsp;</td>
          <td class="paramname"> <em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>argFlags</em> = <code>0</code></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td> const<code> [virtual]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Converts 'text' into proper value 'variant'. 
<p>
Returns true if new (different than m_value) value could be interpreted from the text. <dl compact><dt><b>Parameters:</b></dt><dd>
  <table border="0" cellspacing="2" cellpadding="0">
    <tr><td valign="top"></td><td valign="top"><em>argFlags</em>&nbsp;</td><td>If wxPG_FULL_VALUE is set, returns complete, storable value instead of displayable one (they may be different). If wxPG_COMPOSITE_FRAGMENT is set, text is interpreted as a part of composite property string value (as generated by <a class="el" href="classwxMultiChoiceProperty.htm#179e0f6aacf47b87ec30300637ad3604" title="Returns text representation of property&#39;s value.">GetValueAsString()</a> called with this same flag).</td></tr>
  </table>
</dl>
<dl class="remark" compact><dt><b>Remarks:</b></dt><dd><ul>
<li>Default implementation converts semicolon delimited tokens into child values. Only works for properties with children.</li><li>You might want to take into account that m_value is Null variant if property value is unspecified (which is usually only case if you explicitly enabled that sort behavior). </li></ul>
</dd></dl>

<p>Reimplemented from <a class="el" href="classwxPGProperty.htm#974a9b01c1f88cf4db630b6895453db8">wxPGProperty</a>.</p>

</div>
</div><p>
<hr>The documentation for this class was generated from the following file:<ul>
<li>advprops.h</ul>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Sun Jul 12 13:11:22 2009 for wxPropertyGrid by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.9 </small></address>
</body>
</html>
